{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\r\n    if (file.type.split('/')[0] === 'image') {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function convertBytesToMbsOrKbs(filesize) {\r\n    let size = '';\r\n    if (filesize >= 1048576) {\r\n        size = (filesize / 1048576) + ' megabytes';\r\n    } else if (filesize >= 1024) {\r\n        size = (filesize / 1024) + ' kilobytes';\r\n    } else {\r\n        size = filesize + ' bytes';\r\n    }\r\n    return size;\r\n}\r\n\r\nexport async function createFileFromUrl(url) {\r\n    const response = await fetch(url);\r\n    const data = await response.blob();\r\n    const metadata = {type: data.type};\r\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\r\n    return new File([data], filename, metadata);\r\n}\r\n\r\nexport function readFile(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            resolve(event?.target?.result);\r\n        };\r\n        reader.onerror = (event) => {\r\n            reader.abort();\r\n            reject(event);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    });\r\n}\r\n","import Chip from '@material-ui/core/Chip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport clsx from 'clsx';\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = ({palette, shape, spacing}) => ({\r\n    root: {},\r\n    imageContainer: {\r\n        position: 'relative',\r\n        zIndex: 10,\r\n        textAlign: 'center',\r\n        '&:hover $image': {\r\n            opacity: 0.3,\r\n        },\r\n        '&:hover $removeButton': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n    image: {\r\n        height: 100,\r\n        width: 'initial',\r\n        maxWidth: '100%',\r\n        color: palette.text.primary,\r\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\r\n        borderRadius: shape.borderRadius,\r\n        zIndex: 5,\r\n        opacity: 1,\r\n    },\r\n    removeButton: {\r\n        transition: '.5s ease',\r\n        position: 'absolute',\r\n        opacity: 0,\r\n        top: spacing(-1),\r\n        right: spacing(-1),\r\n        width: 40,\r\n        height: 40,\r\n        '&:focus': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n});\r\n\r\nfunction PreviewList({\r\n    fileObjects,\r\n    handleRemove,\r\n    showFileNames,\r\n    useChipsForPreview,\r\n    previewChipProps,\r\n    previewGridClasses,\r\n    previewGridProps,\r\n    classes,\r\n    getPreviewIcon,\r\n}) {\r\n    if (useChipsForPreview) {\r\n        return (\r\n            <Grid\r\n                spacing={1}\r\n                direction=\"row\"\r\n                {...previewGridProps.container}\r\n                container={true}\r\n                className={clsx(classes.root, previewGridClasses.container)}\r\n            >\r\n                {fileObjects.map((fileObject, i) => {\r\n                    return (\r\n                        <Grid\r\n                            {...previewGridProps.item}\r\n                            item={true}\r\n                            key={`${fileObject.file?.name ?? 'file'}-${i}`}\r\n                            className={classes.imageContainer}\r\n                        >\r\n                            <Chip\r\n                                variant=\"outlined\"\r\n                                {...previewChipProps}\r\n                                label={fileObject.file.name}\r\n                                onDelete={handleRemove(i)}\r\n                            />\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            spacing={8}\r\n            {...previewGridProps.container}\r\n            container={true}\r\n            className={clsx(classes.root, previewGridClasses.container)}\r\n        >\r\n            {fileObjects.map((fileObject, i) => {\r\n                return (\r\n                    <Grid\r\n                        xs={4}\r\n                        {...previewGridProps.item}\r\n                        item={true}\r\n                        key={`${fileObject.file?.name ?? 'file'}-${i}`}\r\n                        className={clsx(classes.imageContainer, previewGridClasses.item)}\r\n                    >\r\n                        {getPreviewIcon(fileObject, classes)}\r\n\r\n                        {showFileNames && (\r\n                            <Typography variant=\"body1\" component=\"p\">\r\n                                {fileObject.file.name}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        <Fab\r\n                            onClick={handleRemove(i)}\r\n                            aria-label=\"Delete\"\r\n                            className={classes.removeButton}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nPreviewList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getPreviewIcon: PropTypes.func.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n    previewChipProps: PropTypes.object,\r\n    previewGridClasses: PropTypes.object,\r\n    previewGridProps: PropTypes.object,\r\n    showFileNames: PropTypes.bool,\r\n    useChipsForPreview: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles, {name: 'MuiDropzonePreviewList'})(PreviewList);\r\n","import IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    successAlert: {\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    errorAlert: {\r\n        backgroundColor: theme.palette.error.main,\r\n    },\r\n    infoAlert: {\r\n        backgroundColor: theme.palette.info.main,\r\n    },\r\n    warningAlert: {\r\n        backgroundColor: theme.palette.warning.main,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& > svg': {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n        opacity: 0.9,\r\n    },\r\n    closeButton: {},\r\n});\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n    const {classes, className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[`${variant}Alert`], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={classes.icon} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, {name: 'MuiDropzoneSnackbar'})(SnackbarContentWrapper);\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport {Fragment} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport {convertBytesToMbsOrKbs, isImage, readFile} from '../helpers';\r\nimport PreviewList from './PreviewList';\r\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\r\n\r\nconst styles = ({palette, shape, spacing}) => ({\r\n    '@keyframes progress': {\r\n        '0%': {\r\n            backgroundPosition: '0 0',\r\n        },\r\n        '100%': {\r\n            backgroundPosition: '-70px 0',\r\n        },\r\n    },\r\n    root: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        minHeight: '250px',\r\n        backgroundColor: palette.background.paper,\r\n        border: 'dashed',\r\n        borderColor: palette.divider,\r\n        borderRadius: shape.borderRadius,\r\n        boxSizing: 'border-box',\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n    },\r\n    active: {\r\n        animation: '$progress 2s linear infinite !important',\r\n        // eslint-disable-next-line max-len\r\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette.background.paper}, ${palette.background.paper} 25px, ${palette.divider} 25px, ${palette.divider} 50px)`,\r\n        backgroundSize: '150% 100%',\r\n        border: 'solid',\r\n        borderColor: palette.primary.light,\r\n    },\r\n    invalid: {\r\n        // eslint-disable-next-line max-len\r\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette.error.light}, ${palette.error.light} 25px, ${palette.error.dark} 25px, ${palette.error.dark} 50px)`,\r\n        borderColor: palette.error.main,\r\n    },\r\n    textContainer: {\r\n        textAlign: 'center',\r\n    },\r\n    text: {\r\n        marginBottom: spacing(3),\r\n        marginTop: spacing(3),\r\n    },\r\n    icon: {\r\n        width: 51,\r\n        height: 51,\r\n        color: palette.text.primary,\r\n    },\r\n});\r\n\r\nconst defaultSnackbarAnchorOrigin = {\r\n    horizontal: 'left',\r\n    vertical: 'bottom',\r\n};\r\n\r\nconst defaultGetPreviewIcon = (fileObject, classes) => {\r\n    if (isImage(fileObject.file)) {\r\n        return (<img\r\n            className={classes.image}\r\n            role=\"presentation\"\r\n            src={fileObject.data}\r\n        />);\r\n    }\r\n\r\n    return <AttachFileIcon className={classes.image} />;\r\n};\r\n\r\n/**\r\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\r\n */\r\nclass DropzoneAreaBase extends React.PureComponent {\r\n    state = {\r\n        openSnackBar: false,\r\n        snackbarMessage: '',\r\n        snackbarVariant: 'success',\r\n    };\r\n\r\n    notifyAlert() {\r\n        const {onAlert} = this.props;\r\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\r\n        if (openSnackBar && onAlert) {\r\n            onAlert(snackbarMessage, snackbarVariant);\r\n        }\r\n    }\r\n\r\n    handleDropAccepted = async(acceptedFiles, evt) => {\r\n        const {fileObjects, filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onAdd, onDrop} = this.props;\r\n\r\n        if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\r\n            this.setState({\r\n                openSnackBar: true,\r\n                snackbarMessage: getFileLimitExceedMessage(filesLimit),\r\n                snackbarVariant: 'error',\r\n            }, this.notifyAlert);\r\n            return;\r\n        }\r\n\r\n        // Notify Drop event\r\n        if (onDrop) {\r\n            onDrop(acceptedFiles, evt);\r\n        }\r\n\r\n        // Retrieve fileObjects data\r\n        const fileObjs = await Promise.all(\r\n            acceptedFiles.map(async(file) => {\r\n                const data = await readFile(file);\r\n                return {\r\n                    file,\r\n                    data,\r\n                };\r\n            })\r\n        );\r\n\r\n        // Notify added files\r\n        if (onAdd) {\r\n            onAdd(fileObjs);\r\n        }\r\n\r\n        // Display message\r\n        const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: message,\r\n            snackbarVariant: 'success',\r\n        }, this.notifyAlert);\r\n    }\r\n\r\n    handleDropRejected = (rejectedFiles, evt) => {\r\n        const {\r\n            acceptedFiles,\r\n            filesLimit,\r\n            fileObjects,\r\n            getDropRejectMessage,\r\n            getFileLimitExceedMessage,\r\n            maxFileSize,\r\n            onDropRejected,\r\n        } = this.props;\r\n\r\n        let message = '';\r\n        if (fileObjects.length + rejectedFiles.length > filesLimit) {\r\n            message = getFileLimitExceedMessage(filesLimit);\r\n        } else {\r\n            rejectedFiles.forEach((rejectedFile) => {\r\n                message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\r\n            });\r\n        }\r\n\r\n        if (onDropRejected) {\r\n            onDropRejected(rejectedFiles, evt);\r\n        }\r\n\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: message,\r\n            snackbarVariant: 'error',\r\n        }, this.notifyAlert);\r\n    }\r\n\r\n    handleRemove = (fileIndex) => (event) => {\r\n        event.stopPropagation();\r\n\r\n        const {fileObjects, getFileRemovedMessage, onDelete} = this.props;\r\n\r\n        // Find removed fileObject\r\n        const removedFileObj = fileObjects[fileIndex];\r\n\r\n        // Notify removed file\r\n        if (onDelete) {\r\n            onDelete(removedFileObj, fileIndex);\r\n        }\r\n\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\r\n            snackbarVariant: 'info',\r\n        }, this.notifyAlert);\r\n    };\r\n\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            openSnackBar: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            acceptedFiles,\r\n            alertSnackbarProps,\r\n            classes,\r\n            disableRejectionFeedback,\r\n            dropzoneClass,\r\n            dropzoneParagraphClass,\r\n            dropzoneProps,\r\n            dropzoneText,\r\n            fileObjects,\r\n            filesLimit,\r\n            getPreviewIcon,\r\n            Icon,\r\n            inputProps,\r\n            maxFileSize,\r\n            previewChipProps,\r\n            previewGridClasses,\r\n            previewGridProps,\r\n            previewText,\r\n            showAlerts,\r\n            showFileNames,\r\n            showFileNamesInPreview,\r\n            showPreviews,\r\n            showPreviewsInDropzone,\r\n            useChipsForPreview,\r\n        } = this.props;\r\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\r\n\r\n        const acceptFiles = acceptedFiles?.join(',');\r\n        const isMultiple = filesLimit > 1;\r\n        const previewsVisible = showPreviews && fileObjects.length > 0;\r\n        const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Dropzone\r\n                    {...dropzoneProps}\r\n                    accept={acceptFiles}\r\n                    onDropAccepted={this.handleDropAccepted}\r\n                    onDropRejected={this.handleDropRejected}\r\n                    maxSize={maxFileSize}\r\n                    multiple={isMultiple}\r\n                >\r\n                    {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\r\n                        <div\r\n                            {...getRootProps({\r\n                                className: clsx(\r\n                                    classes.root,\r\n                                    dropzoneClass,\r\n                                    isDragActive && classes.active,\r\n                                    (!disableRejectionFeedback && isDragReject) && classes.invalid,\r\n                                ),\r\n                            })}\r\n                        >\r\n                            <input {...getInputProps(inputProps)} />\r\n\r\n                            <div className={classes.textContainer}>\r\n                                <Typography\r\n                                    variant=\"h5\"\r\n                                    component=\"p\"\r\n                                    className={clsx(classes.text, dropzoneParagraphClass)}\r\n                                >\r\n                                    {dropzoneText}\r\n                                </Typography>\r\n                                {Icon ? (\r\n                                    <Icon className={classes.icon} />\r\n                                ) : (\r\n                                    <CloudUploadIcon className={classes.icon} />\r\n                                )}\r\n                            </div>\r\n\r\n                            {previewsInDropzoneVisible &&\r\n                                <PreviewList\r\n                                    fileObjects={fileObjects}\r\n                                    handleRemove={this.handleRemove}\r\n                                    getPreviewIcon={getPreviewIcon}\r\n                                    showFileNames={showFileNames}\r\n                                    useChipsForPreview={useChipsForPreview}\r\n                                    previewChipProps={previewChipProps}\r\n                                    previewGridClasses={previewGridClasses}\r\n                                    previewGridProps={previewGridProps}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    )}\r\n                </Dropzone>\r\n\r\n                {previewsVisible &&\r\n                    <Fragment>\r\n                        <Typography variant=\"subtitle1\" component=\"span\">\r\n                            {previewText}\r\n                        </Typography>\r\n\r\n                        <PreviewList\r\n                            fileObjects={fileObjects}\r\n                            handleRemove={this.handleRemove}\r\n                            getPreviewIcon={getPreviewIcon}\r\n                            showFileNames={showFileNamesInPreview}\r\n                            useChipsForPreview={useChipsForPreview}\r\n                            previewChipProps={previewChipProps}\r\n                            previewGridClasses={previewGridClasses}\r\n                            previewGridProps={previewGridProps}\r\n                        />\r\n                    </Fragment>\r\n                }\r\n\r\n                {((typeof showAlerts === 'boolean' && showAlerts) ||\r\n                    (Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant))) &&\r\n                    <Snackbar\r\n                        anchorOrigin={defaultSnackbarAnchorOrigin}\r\n                        autoHideDuration={6000}\r\n                        {...alertSnackbarProps}\r\n                        open={openSnackBar}\r\n                        onClose={this.handleCloseSnackbar}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleCloseSnackbar}\r\n                            variant={snackbarVariant}\r\n                            message={snackbarMessage}\r\n                        />\r\n                    </Snackbar>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneAreaBase.defaultProps = {\r\n    acceptedFiles: [],\r\n    filesLimit: 3,\r\n    fileObjects: [],\r\n    maxFileSize: 3000000,\r\n    dropzoneText: 'Drag and drop a file here or click',\r\n    previewText: 'Preview:',\r\n    disableRejectionFeedback: false,\r\n    showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\r\n    showPreviewsInDropzone: true,\r\n    showFileNames: false,\r\n    showFileNamesInPreview: false,\r\n    useChipsForPreview: false,\r\n    previewChipProps: {},\r\n    previewGridClasses: {},\r\n    previewGridProps: {},\r\n    showAlerts: true,\r\n    alertSnackbarProps: {\r\n        anchorOrigin: {\r\n            horizontal: 'left',\r\n            vertical: 'bottom',\r\n        },\r\n        autoHideDuration: 6000,\r\n    },\r\n    getFileLimitExceedMessage: (filesLimit) => (`Maximum allowed number of files exceeded. Only ${filesLimit} allowed`),\r\n    getFileAddedMessage: (fileName) => (`File ${fileName} successfully added.`),\r\n    getPreviewIcon: defaultGetPreviewIcon,\r\n    getFileRemovedMessage: (fileName) => (`File ${fileName} removed.`),\r\n    getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\r\n        let message = `File ${rejectedFile.name} was rejected. `;\r\n        if (!acceptedFiles.includes(rejectedFile.type)) {\r\n            message += 'File type not supported. ';\r\n        }\r\n        if (rejectedFile.size > maxFileSize) {\r\n            message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\r\n        }\r\n        return message;\r\n    },\r\n};\r\n\r\nexport const FileObjectShape = PropTypes.shape({\r\n    file: PropTypes.object,\r\n    data: PropTypes.any,\r\n});\r\n\r\nDropzoneAreaBase.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** A list of file types to accept.\r\n     * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\r\n     */\r\n    acceptedFiles: PropTypes.arrayOf(PropTypes.string),\r\n    /** Maximum number of files that can be loaded into the dropzone. */\r\n    filesLimit: PropTypes.number,\r\n    /** Icon to be displayed inside the dropzone area. */\r\n    Icon: PropTypes.elementType,\r\n    /** Currently loaded files. */\r\n    fileObjects: PropTypes.arrayOf(FileObjectShape),\r\n    /** Maximum file size (in bytes) that the dropzone will accept. */\r\n    maxFileSize: PropTypes.number,\r\n    /** Text inside the dropzone. */\r\n    dropzoneText: PropTypes.string,\r\n    /** Custom CSS class name for dropzone container. */\r\n    dropzoneClass: PropTypes.string,\r\n    /** Custom CSS class name for text inside the container. */\r\n    dropzoneParagraphClass: PropTypes.string,\r\n    /** Disable feedback effect when dropping rejected files. */\r\n    disableRejectionFeedback: PropTypes.bool,\r\n    /** Shows previews **BELOW** the dropzone. */\r\n    showPreviews: PropTypes.bool,\r\n    /** Shows preview **INSIDE** the dropzone area. */\r\n    showPreviewsInDropzone: PropTypes.bool,\r\n    /** Shows file name under the dropzone image. */\r\n    showFileNames: PropTypes.bool,\r\n    /** Shows file name under the image. */\r\n    showFileNamesInPreview: PropTypes.bool,\r\n    /** Uses deletable Material-UI Chip components to display file names. */\r\n    useChipsForPreview: PropTypes.bool,\r\n    /**\r\n     * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\r\n     *\r\n     * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\r\n     */\r\n    previewChipProps: PropTypes.object,\r\n    /**\r\n     * Custom CSS classNames for preview Grid components.<br/>\r\n     * Should be in the form {container: string, item: string, image: string}.\r\n     */\r\n    previewGridClasses: PropTypes.object,\r\n    /**\r\n     * Props to pass to the Material-UI Grid components.<br/>\r\n     * Should be in the form {container: GridProps, item: GridProps}.\r\n     *\r\n     * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\r\n     */\r\n    previewGridProps: PropTypes.object,\r\n    /** The label for the file preview section. */\r\n    previewText: PropTypes.string,\r\n    /**\r\n     * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\r\n     *\r\n     * - can be a boolean (\"global\" `true` or `false` for all alerts).\r\n     * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\r\n     *  - showAlerts={['error']} for only errors.\r\n     *  - showAlerts={['error', 'info']} for both errors and info.\r\n     *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\r\n     *  - showAlerts={[]} is same as showAlerts={false}.\r\n     */\r\n    showAlerts: PropTypes.oneOfType([\r\n        PropTypes.bool,\r\n        PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\r\n    ]),\r\n    /**\r\n     * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\r\n     *\r\n     * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\r\n     */\r\n    alertSnackbarProps: PropTypes.object,\r\n    /**\r\n     * Props to pass to the Dropzone component.\r\n     *\r\n     * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\r\n     */\r\n    dropzoneProps: PropTypes.object,\r\n    /**\r\n     * Attributes applied to the input element.\r\n     *\r\n     * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\r\n     */\r\n    inputProps: PropTypes.object,\r\n    /**\r\n     * Get alert message to display when files limit is exceed.\r\n     *\r\n     * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\r\n     *\r\n     * @param {number} filesLimit The `filesLimit` currently set for the component.\r\n     */\r\n    getFileLimitExceedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a new file is added.\r\n     *\r\n     * *Default*: \"File ${fileName} successfully added.\"\r\n     *\r\n     * @param {string} fileName The newly added file name.\r\n     */\r\n    getFileAddedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a file is removed.\r\n     *\r\n     * *Default*: \"File ${fileName} removed.\"\r\n     *\r\n     * @param {string} fileName The name of the removed file.\r\n     */\r\n    getFileRemovedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a file is rejected onDrop.\r\n     *\r\n     * *Default*: \"File ${rejectedFile.name} was rejected.\"\r\n     *\r\n     * @param {Object} rejectedFile The file that got rejected\r\n     * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\r\n     * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\r\n     */\r\n    getDropRejectMessage: PropTypes.func,\r\n    /**\r\n     * A function which determines which icon to display for a file preview.\r\n     *\r\n     * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\r\n     *\r\n     * @param {FileObject} objectFile The file which the preview will belong to\r\n     * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\r\n     */\r\n    getPreviewIcon: PropTypes.func,\r\n    /**\r\n     * Fired when new files are added to dropzone.\r\n     *\r\n     * @param {FileObject[]} newFiles The new files added to the dropzone.\r\n     */\r\n    onAdd: PropTypes.func,\r\n    /**\r\n     * Fired when a file is deleted from the previews panel.\r\n     *\r\n     * @param {FileObject} deletedFileObject The file that was removed.\r\n     * @param {number} index The index of the removed file object.\r\n     */\r\n    onDelete: PropTypes.func,\r\n    /**\r\n     * Fired when the user drops files into the dropzone.\r\n     *\r\n     * @param {File[]} droppedFiles All the files dropped into the dropzone.\r\n     * @param {Event} event The react-dropzone drop event.\r\n     */\r\n    onDrop: PropTypes.func,\r\n    /**\r\n     * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\r\n     *\r\n     * @param {File[]} rejectedFiles All the rejected files.\r\n     * @param {Event} event The react-dropzone drop event.\r\n     */\r\n    onDropRejected: PropTypes.func,\r\n    /**\r\n     * Fired when an alert is triggered.\r\n     *\r\n     * @param {string} message Alert message.\r\n     * @param {string} variant One of \"error\", \"info\", \"success\".\r\n     */\r\n    onAlert: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, {name: 'MuiDropzoneArea'})(DropzoneAreaBase);\r\n","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport {createFileFromUrl, readFile} from '../helpers';\r\n\r\nimport DropzoneAreaBase from './DropzoneAreaBase';\r\n\r\nconst splitDropzoneAreaProps = (props) => {\r\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\r\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\r\n};\r\n\r\n/**\r\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\r\n *\r\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\r\n *\r\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\r\n */\r\nclass DropzoneArea extends React.PureComponent {\r\n    state = {\r\n        fileObjects: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadInitialFiles();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {clearOnUnmount} = this.props;\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    notifyFileChange = () => {\r\n        const {onChange} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        if (onChange) {\r\n            onChange(fileObjects.map((fileObject) => fileObject.file));\r\n        }\r\n    }\r\n\r\n    loadInitialFiles = async() => {\r\n        const {initialFiles} = this.props;\r\n        try {\r\n            const fileObjs = await Promise.all(\r\n                initialFiles.map(async(initialFile) => {\r\n                    let file;\r\n                    if (typeof initialFile === 'string' ) {\r\n                        file = await createFileFromUrl(initialFile);\r\n                    } else {\r\n                        file = initialFile;\r\n                    }\r\n                    const data = await readFile(file);\r\n\r\n                    return {\r\n                        file,\r\n                        data,\r\n                    };\r\n                })\r\n            );\r\n\r\n            this.setState((state) => ({\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    fileObjs\r\n                ),\r\n            }), this.notifyFileChange);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    addFiles = async(newFileObjects) => {\r\n        const {filesLimit} = this.props;\r\n        // Update component state\r\n        this.setState((state) => {\r\n            // Handle a single file\r\n            if (filesLimit <= 1) {\r\n                return {\r\n                    fileObjects: [].concat(newFileObjects[0]),\r\n                };\r\n            }\r\n\r\n            // Handle multiple files\r\n            return {\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    newFileObjects\r\n                ),\r\n            };\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\r\n        event.stopPropagation();\r\n\r\n        const {onDelete} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        // Calculate remaining fileObjects array\r\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\r\n            return i !== removedFileObjIdx;\r\n        });\r\n\r\n        // Notify removed file\r\n        if (onDelete) {\r\n            onDelete(removedFileObj.file);\r\n        }\r\n\r\n        // Update local state\r\n        this.setState({\r\n            fileObjects: remainingFileObjs,\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    render() {\r\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\r\n        const {fileObjects} = this.state;\r\n\r\n        return (\r\n            <DropzoneAreaBase\r\n                {...dropzoneAreaProps}\r\n                fileObjects={fileObjects}\r\n                onAdd={this.addFiles}\r\n                onDelete={this.deleteFile}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneArea.defaultProps = {\r\n    clearOnUnmount: true,\r\n    filesLimit: 3,\r\n    initialFiles: [],\r\n};\r\n\r\nDropzoneArea.propTypes = {\r\n    ...DropzoneAreaBase.propTypes,\r\n    /** Clear uploaded files when component is unmounted. */\r\n    clearOnUnmount: PropTypes.bool,\r\n    /** List containing File objects or URL strings.<br/>\r\n     * **Note:** Please take care of CORS.\r\n    */\r\n    initialFiles: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.any,\r\n        ])\r\n    ),\r\n    /** Maximum number of files that can be loaded into the dropzone. */\r\n    filesLimit: PropTypes.number,\r\n    /**\r\n     * Fired when the files inside dropzone change.\r\n     *\r\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\r\n     */\r\n    onChange: PropTypes.func,\r\n    /**\r\n     * Fired when a file is deleted from the previews panel.\r\n     *\r\n     * @param {File} deletedFile The file that was removed.\r\n     */\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nexport default DropzoneArea;\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport DropzoneAreaBase from './DropzoneAreaBase';\r\n\r\n// Split props related to DropzoneDialog from DropzoneArea ones\r\nfunction splitDropzoneDialogProps(allProps) {\r\n    const {\r\n        cancelButtonText,\r\n        dialogProps,\r\n        dialogTitle,\r\n        fullWidth,\r\n        maxWidth,\r\n        onClose,\r\n        onSave,\r\n        open,\r\n        submitButtonText,\r\n        ...dropzoneAreaProps\r\n    } = allProps;\r\n\r\n    return [\r\n        {\r\n            cancelButtonText,\r\n            dialogProps,\r\n            dialogTitle,\r\n            fullWidth,\r\n            maxWidth,\r\n            onClose,\r\n            onSave,\r\n            open,\r\n            submitButtonText,\r\n        },\r\n        dropzoneAreaProps,\r\n    ];\r\n}\r\n\r\n/**\r\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\r\n *\r\n * It supports all the Props and Methods from `DropzoneAreaBase`.\r\n */\r\nclass DropzoneDialogBase extends React.PureComponent {\r\n    render() {\r\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\r\n        const {\r\n            cancelButtonText,\r\n            dialogProps,\r\n            dialogTitle,\r\n            fullWidth,\r\n            maxWidth,\r\n            onClose,\r\n            onSave,\r\n            open,\r\n            submitButtonText,\r\n        } = dropzoneDialogProps;\r\n\r\n        // Submit button state\r\n        const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\r\n\r\n        return (\r\n            <Dialog\r\n                {...dialogProps}\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                onClose={onClose}\r\n                open={open}\r\n            >\r\n                <DialogTitle>{dialogTitle}</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DropzoneAreaBase\r\n                        {...dropzoneAreaProps}\r\n                    />\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={onClose}\r\n                    >\r\n                        {cancelButtonText}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        disabled={submitDisabled}\r\n                        onClick={onSave}\r\n                    >\r\n                        {submitButtonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneDialogBase.defaultProps = {\r\n    open: false,\r\n    dialogTitle: 'Upload file',\r\n    dialogProps: {},\r\n    fullWidth: true,\r\n    maxWidth: 'sm',\r\n    cancelButtonText: 'Cancel',\r\n    submitButtonText: 'Submit',\r\n    showPreviews: true,\r\n    showPreviewsInDropzone: false,\r\n    showFileNamesInPreview: true,\r\n};\r\n\r\nDropzoneDialogBase.propTypes = {\r\n    ...DropzoneAreaBase.propTypes,\r\n    /** Sets whether the dialog is open or closed. */\r\n    open: PropTypes.bool,\r\n    /** The Dialog title. */\r\n    dialogTitle: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n    ]),\r\n    /**\r\n     * Props to pass to the Material-UI Dialog components.\r\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\r\n     */\r\n    dialogProps: PropTypes.object,\r\n    /**\r\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\r\n     * Notice that the dialog width grow is limited by the default margin.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n    /**\r\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\r\n     * Set to `false` to disable `maxWidth`.\r\n     */\r\n    maxWidth: PropTypes.string,\r\n    /** Cancel button text in dialog. */\r\n    cancelButtonText: PropTypes.string,\r\n    /** Submit button text in dialog. */\r\n    submitButtonText: PropTypes.string,\r\n    /**\r\n     * Fired when the modal is closed.\r\n     *\r\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\r\n     */\r\n    onClose: PropTypes.func,\r\n    /**\r\n     * Fired when the user clicks the Submit button.\r\n     *\r\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\r\n     */\r\n    onSave: PropTypes.func,\r\n    /**\r\n     * Shows previews **BELOW** the dropzone.<br/>\r\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\r\n     */\r\n    showPreviews: PropTypes.bool,\r\n    /** Shows preview **INSIDE** the dropzone area. */\r\n    showPreviewsInDropzone: PropTypes.bool,\r\n    /** Shows file name under the image. */\r\n    showFileNamesInPreview: PropTypes.bool,\r\n};\r\n\r\nexport default DropzoneDialogBase;\r\n","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport {createFileFromUrl, readFile} from '../helpers';\r\n\r\nimport DropzoneDialogBase from './DropzoneDialogBase';\r\n\r\n\r\n/**\r\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\r\n *\r\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\r\n *\r\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\r\n */\r\nclass DropzoneDialog extends React.PureComponent {\r\n    state = {\r\n        fileObjects: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadInitialFiles();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {clearOnUnmount} = this.props;\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    notifyFileChange = () => {\r\n        const {onChange} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        if (onChange) {\r\n            onChange(fileObjects.map((fileObject) => fileObject.file));\r\n        }\r\n    }\r\n\r\n    loadInitialFiles = async() => {\r\n        const {initialFiles} = this.props;\r\n        try {\r\n            const fileObjs = await Promise.all(\r\n                initialFiles.map(async(initialFile) => {\r\n                    let file;\r\n                    if (typeof initialFile === 'string' ) {\r\n                        file = await createFileFromUrl(initialFile);\r\n                    } else {\r\n                        file = initialFile;\r\n                    }\r\n                    const data = await readFile(file);\r\n\r\n                    return {\r\n                        file,\r\n                        data,\r\n                    };\r\n                })\r\n            );\r\n\r\n            this.setState((state) => ({\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    fileObjs\r\n                ),\r\n            }), this.notifyFileChange);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    addFiles = async(newFileObjects) => {\r\n        const {filesLimit} = this.props;\r\n        // Update component state\r\n        this.setState((state) => {\r\n            // Handle a single file\r\n            if (filesLimit <= 1) {\r\n                return {\r\n                    fileObjects: [].concat(newFileObjects[0]),\r\n                };\r\n            }\r\n\r\n            // Handle multiple files\r\n            return {\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    newFileObjects\r\n                ),\r\n            };\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\r\n        event.stopPropagation();\r\n\r\n        const {onDelete} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        // Calculate remaining fileObjects array\r\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\r\n            return i !== removedFileObjIdx;\r\n        });\r\n\r\n        // Notify removed file\r\n        if (onDelete) {\r\n            onDelete(removedFileObj.file);\r\n        }\r\n\r\n        // Update local state\r\n        this.setState({\r\n            fileObjects: remainingFileObjs,\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    handleClose = (evt) => {\r\n        const {clearOnUnmount, onClose} = this.props;\r\n\r\n        if (onClose) {\r\n            onClose(evt);\r\n        }\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    handleSave = (evt) => {\r\n        const {clearOnUnmount, onSave} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        if (onSave) {\r\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\r\n        }\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {fileObjects} = this.state;\r\n\r\n        return (\r\n            <DropzoneDialogBase\r\n                {...this.props}\r\n                fileObjects={fileObjects}\r\n                onAdd={this.addFiles}\r\n                onDelete={this.deleteFile}\r\n                onClose={this.handleClose}\r\n                onSave={this.handleSave}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneDialog.defaultProps = {\r\n    clearOnUnmount: true,\r\n    filesLimit: 3,\r\n    initialFiles: [],\r\n};\r\n\r\nDropzoneDialog.propTypes = {\r\n    ...DropzoneDialogBase.propTypes,\r\n    /** Clear uploaded files when component is unmounted. */\r\n    clearOnUnmount: PropTypes.bool,\r\n    /** Maximum number of files that can be loaded into the dropzone. */\r\n    filesLimit: PropTypes.number,\r\n    /** List containing File objects or URL strings.<br/>\r\n     * **Note:** Please take care of CORS.\r\n    */\r\n    initialFiles: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.any,\r\n        ])\r\n    ),\r\n    /**\r\n     * Fired when the user clicks the Submit button.\r\n     *\r\n     * @param {File[]} files All the files currently inside the Dropzone.\r\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\r\n     */\r\n    onSave: PropTypes.func,\r\n};\r\n\r\nexport default DropzoneDialog;\r\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","palette","shape","spacing","root","imageContainer","position","zIndex","textAlign","opacity","image","height","width","maxWidth","color","text","primary","transition","boxSizing","boxShadow","borderRadius","removeButton","top","right","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","getPreviewIcon","React.createElement","container","clsx","map","fileObject","i","item","name","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","successAlert","backgroundColor","main","errorAlert","infoAlert","warningAlert","message","display","alignItems","marginRight","icon","fontSize","closeButton","SnackbarContentWrapper","props","className","onClose","variant","other","Icon","string","node","oneOf","backgroundPosition","minHeight","background","paper","border","borderColor","divider","cursor","overflow","active","animation","backgroundImage","backgroundSize","light","invalid","dark","textContainer","marginBottom","marginTop","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","DropzoneAreaBase","state","openSnackBar","snackbarMessage","snackbarVariant","handleDropAccepted","acceptedFiles","evt","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","length","setState","notifyAlert","all","fileObjs","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","getFileRemovedMessage","onDelete","removedFileObj","handleCloseSnackbar","onAlert","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","getRootProps","getInputProps","isDragActive","isDragReject","Array","isArray","includes","React","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","number","elementType","oneOfType","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","DropzoneArea","notifyFileChange","loadInitialFiles","initialFile","concat","console","log","addFiles","newFileObjects","deleteFile","removedFileObjIdx","remainingFileObjs","filter","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","DropzoneDialogBase","dropzoneDialogProps","submitDisabled","element","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}