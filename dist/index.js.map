{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    if (filesize >= 1048576) {\n        size = (filesize / 1048576) + ' megabytes';\n    } else if (filesize >= 1024) {\n        size = (filesize / 1024) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import Chip from '@material-ui/core/Chip';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = ({palette, shape, spacing}) => ({\n    root: {},\n    imageContainer: {\n        position: 'relative',\n        zIndex: 10,\n        textAlign: 'center',\n        '&:hover $image': {\n            opacity: 0.3,\n        },\n        '&:hover $removeButton': {\n            opacity: 1,\n        },\n    },\n    image: {\n        height: 100,\n        width: 'initial',\n        maxWidth: '100%',\n        color: palette.text.primary,\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n        boxSizing: 'border-box',\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\n        borderRadius: shape.borderRadius,\n        zIndex: 5,\n        opacity: 1,\n    },\n    removeButton: {\n        transition: '.5s ease',\n        position: 'absolute',\n        opacity: 0,\n        top: spacing(-1),\n        right: spacing(-1),\n        width: 40,\n        height: 40,\n        '&:focus': {\n            opacity: 1,\n        },\n    },\n});\n\nfunction PreviewList({\n    fileObjects,\n    handleRemove,\n    showFileNames,\n    useChipsForPreview,\n    previewChipProps,\n    previewGridClasses,\n    previewGridProps,\n    classes,\n    getPreviewIcon,\n}) {\n    if (useChipsForPreview) {\n        return (\n            <Grid\n                spacing={1}\n                direction=\"row\"\n                {...previewGridProps.container}\n                container={true}\n                className={clsx(classes.root, previewGridClasses.container)}\n            >\n                {fileObjects.map((fileObject, i) => {\n                    return (\n                        <Grid\n                            {...previewGridProps.item}\n                            item={true}\n                            key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                            className={classes.imageContainer}\n                        >\n                            <Chip\n                                variant=\"outlined\"\n                                {...previewChipProps}\n                                label={fileObject.file.name}\n                                onDelete={handleRemove(i)}\n                            />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n\n    return (\n        <Grid\n            spacing={8}\n            {...previewGridProps.container}\n            container={true}\n            className={clsx(classes.root, previewGridClasses.container)}\n        >\n            {fileObjects.map((fileObject, i) => {\n                return (\n                    <Grid\n                        xs={4}\n                        {...previewGridProps.item}\n                        item={true}\n                        key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                        className={clsx(classes.imageContainer, previewGridClasses.item)}\n                    >\n                        {getPreviewIcon(fileObject, classes)}\n\n                        {showFileNames && (\n                            <Typography variant=\"body1\" component=\"p\">\n                                {fileObject.file.name}\n                            </Typography>\n                        )}\n\n                        <Fab\n                            onClick={handleRemove(i)}\n                            aria-label=\"Delete\"\n                            className={classes.removeButton}\n                        >\n                            <DeleteIcon />\n                        </Fab>\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n}\n\nPreviewList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n    getPreviewIcon: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    previewChipProps: PropTypes.object,\n    previewGridClasses: PropTypes.object,\n    previewGridProps: PropTypes.object,\n    showFileNames: PropTypes.bool,\n    useChipsForPreview: PropTypes.bool,\n};\n\nexport default withStyles(styles, {name: 'MuiDropzonePreviewList'})(PreviewList);\n","import Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Alert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {Fragment} from 'react';\nimport Dropzone from 'react-dropzone';\nimport {convertBytesToMbsOrKbs, isImage, readFile} from '../helpers';\nimport PreviewList from './PreviewList';\n\nconst styles = ({palette, shape, spacing}) => ({\n    '@keyframes progress': {\n        '0%': {\n            backgroundPosition: '0 0',\n        },\n        '100%': {\n            backgroundPosition: '-70px 0',\n        },\n    },\n    root: {\n        position: 'relative',\n        width: '100%',\n        minHeight: '250px',\n        backgroundColor: palette.background.paper,\n        border: 'dashed',\n        borderColor: palette.divider,\n        borderRadius: shape.borderRadius,\n        boxSizing: 'border-box',\n        cursor: 'pointer',\n        overflow: 'hidden',\n    },\n    active: {\n        animation: '$progress 2s linear infinite !important',\n        // eslint-disable-next-line max-len\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette.background.paper}, ${palette.background.paper} 25px, ${palette.divider} 25px, ${palette.divider} 50px)`,\n        backgroundSize: '150% 100%',\n        border: 'solid',\n        borderColor: palette.primary.light,\n    },\n    invalid: {\n        // eslint-disable-next-line max-len\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette.error.light}, ${palette.error.light} 25px, ${palette.error.dark} 25px, ${palette.error.dark} 50px)`,\n        borderColor: palette.error.main,\n    },\n    textContainer: {\n        textAlign: 'center',\n    },\n    text: {\n        marginBottom: spacing(3),\n        marginTop: spacing(3),\n    },\n    icon: {\n        width: 51,\n        height: 51,\n        color: palette.text.primary,\n    },\n});\n\nconst defaultSnackbarAnchorOrigin = {\n    horizontal: 'left',\n    vertical: 'bottom',\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes) => {\n    if (isImage(fileObject.file)) {\n        return (<img\n            className={classes.image}\n            role=\"presentation\"\n            src={fileObject.data}\n        />);\n    }\n\n    return <AttachFileIcon className={classes.image} />;\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nclass DropzoneAreaBase extends React.PureComponent {\n    state = {\n        openSnackBar: false,\n        snackbarMessage: '',\n        snackbarVariant: 'success',\n    };\n\n    notifyAlert() {\n        const {onAlert} = this.props;\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\n        if (openSnackBar && onAlert) {\n            onAlert(snackbarMessage, snackbarVariant);\n        }\n    }\n\n    handleDropAccepted = async(acceptedFiles, evt) => {\n        const {fileObjects, filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onAdd, onDrop} = this.props;\n\n        if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\n            this.setState({\n                openSnackBar: true,\n                snackbarMessage: getFileLimitExceedMessage(filesLimit),\n                snackbarVariant: 'error',\n            }, this.notifyAlert);\n            return;\n        }\n\n        // Notify Drop event\n        if (onDrop) {\n            onDrop(acceptedFiles, evt);\n        }\n\n        // Retrieve fileObjects data\n        const fileObjs = await Promise.all(\n            acceptedFiles.map(async(file) => {\n                const data = await readFile(file);\n                return {\n                    file,\n                    data,\n                };\n            })\n        );\n\n        // Notify added files\n        if (onAdd) {\n            onAdd(fileObjs);\n        }\n\n        // Display message\n        const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: message,\n            snackbarVariant: 'success',\n        }, this.notifyAlert);\n    }\n\n    handleDropRejected = (rejectedFiles, evt) => {\n        const {\n            acceptedFiles,\n            filesLimit,\n            fileObjects,\n            getDropRejectMessage,\n            getFileLimitExceedMessage,\n            maxFileSize,\n            onDropRejected,\n        } = this.props;\n\n        let message = '';\n        if (fileObjects.length + rejectedFiles.length > filesLimit) {\n            message = getFileLimitExceedMessage(filesLimit);\n        } else {\n            rejectedFiles.forEach((rejectedFile) => {\n                message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\n            });\n        }\n\n        if (onDropRejected) {\n            onDropRejected(rejectedFiles, evt);\n        }\n\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: message,\n            snackbarVariant: 'error',\n        }, this.notifyAlert);\n    }\n\n    handleRemove = (fileIndex) => (event) => {\n        event.stopPropagation();\n\n        const {fileObjects, getFileRemovedMessage, onDelete} = this.props;\n\n        // Find removed fileObject\n        const removedFileObj = fileObjects[fileIndex];\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj, fileIndex);\n        }\n\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n            snackbarVariant: 'info',\n        }, this.notifyAlert);\n    };\n\n    handleCloseSnackbar = () => {\n        this.setState({\n            openSnackBar: false,\n        });\n    };\n\n    render() {\n        const {\n            acceptedFiles,\n            alertSnackbarProps,\n            classes,\n            disableRejectionFeedback,\n            dropzoneClass,\n            dropzoneParagraphClass,\n            dropzoneProps,\n            dropzoneText,\n            fileObjects,\n            filesLimit,\n            getPreviewIcon,\n            Icon,\n            inputProps,\n            maxFileSize,\n            previewChipProps,\n            previewGridClasses,\n            previewGridProps,\n            previewText,\n            showAlerts,\n            showFileNames,\n            showFileNamesInPreview,\n            showPreviews,\n            showPreviewsInDropzone,\n            useChipsForPreview,\n        } = this.props;\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\n\n        const acceptFiles = acceptedFiles?.join(',');\n        const isMultiple = filesLimit > 1;\n        const previewsVisible = showPreviews && fileObjects.length > 0;\n        const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\n\n        return (\n            <Fragment>\n                <Dropzone\n                    {...dropzoneProps}\n                    accept={acceptFiles}\n                    onDropAccepted={this.handleDropAccepted}\n                    onDropRejected={this.handleDropRejected}\n                    maxSize={maxFileSize}\n                    multiple={isMultiple}\n                >\n                    {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n                        <div\n                            {...getRootProps({\n                                className: clsx(\n                                    classes.root,\n                                    dropzoneClass,\n                                    isDragActive && classes.active,\n                                    (!disableRejectionFeedback && isDragReject) && classes.invalid,\n                                ),\n                            })}\n                        >\n                            <input {...getInputProps(inputProps)} />\n\n                            <div className={classes.textContainer}>\n                                <Typography\n                                    variant=\"h5\"\n                                    component=\"p\"\n                                    className={clsx(classes.text, dropzoneParagraphClass)}\n                                >\n                                    {dropzoneText}\n                                </Typography>\n                                {Icon ? (\n                                    <Icon className={classes.icon} />\n                                ) : (\n                                    <CloudUploadIcon className={classes.icon} />\n                                )}\n                            </div>\n\n                            {previewsInDropzoneVisible &&\n                                <PreviewList\n                                    fileObjects={fileObjects}\n                                    handleRemove={this.handleRemove}\n                                    getPreviewIcon={getPreviewIcon}\n                                    showFileNames={showFileNames}\n                                    useChipsForPreview={useChipsForPreview}\n                                    previewChipProps={previewChipProps}\n                                    previewGridClasses={previewGridClasses}\n                                    previewGridProps={previewGridProps}\n                                />\n                            }\n                        </div>\n                    )}\n                </Dropzone>\n\n                {previewsVisible &&\n                    <Fragment>\n                        <Typography variant=\"subtitle1\" component=\"span\">\n                            {previewText}\n                        </Typography>\n\n                        <PreviewList\n                            fileObjects={fileObjects}\n                            handleRemove={this.handleRemove}\n                            getPreviewIcon={getPreviewIcon}\n                            showFileNames={showFileNamesInPreview}\n                            useChipsForPreview={useChipsForPreview}\n                            previewChipProps={previewChipProps}\n                            previewGridClasses={previewGridClasses}\n                            previewGridProps={previewGridProps}\n                        />\n                    </Fragment>\n                }\n\n                {((typeof showAlerts === 'boolean' && showAlerts) ||\n                    (Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant))) &&\n                    <Snackbar\n                        anchorOrigin={defaultSnackbarAnchorOrigin}\n                        autoHideDuration={6000}\n                        {...alertSnackbarProps}\n                        open={openSnackBar}\n                        onClose={this.handleCloseSnackbar}\n                    >\n                        <Alert severity={snackbarVariant} onClose={this.handleCloseSnackbar}>{snackbarMessage}</Alert>\n                    </Snackbar>\n                }\n            </Fragment>\n        );\n    }\n}\n\nDropzoneAreaBase.defaultProps = {\n    acceptedFiles: [],\n    filesLimit: 3,\n    fileObjects: [],\n    maxFileSize: 3000000,\n    dropzoneText: 'Drag and drop a file here or click',\n    previewText: 'Preview:',\n    disableRejectionFeedback: false,\n    showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\n    showPreviewsInDropzone: true,\n    showFileNames: false,\n    showFileNamesInPreview: false,\n    useChipsForPreview: false,\n    previewChipProps: {},\n    previewGridClasses: {},\n    previewGridProps: {},\n    showAlerts: true,\n    alertSnackbarProps: {\n        anchorOrigin: {\n            horizontal: 'left',\n            vertical: 'bottom',\n        },\n        autoHideDuration: 6000,\n    },\n    getFileLimitExceedMessage: (filesLimit) => (`Maximum allowed number of files exceeded. Only ${filesLimit} allowed`),\n    getFileAddedMessage: (fileName) => (`File ${fileName} successfully added.`),\n    getPreviewIcon: defaultGetPreviewIcon,\n    getFileRemovedMessage: (fileName) => (`File ${fileName} removed.`),\n    getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n        let message = `File ${rejectedFile.name} was rejected. `;\n        if (!acceptedFiles.includes(rejectedFile.type)) {\n            message += 'File type not supported. ';\n        }\n        if (rejectedFile.size > maxFileSize) {\n            message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\n        }\n        return message;\n    },\n};\n\nexport const FileObjectShape = PropTypes.shape({\n    file: PropTypes.object,\n    data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** A list of file types to accept.\n     * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n     */\n    acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** Icon to be displayed inside the dropzone area. */\n    Icon: PropTypes.elementType,\n    /** Currently loaded files. */\n    fileObjects: PropTypes.arrayOf(FileObjectShape),\n    /** Maximum file size (in bytes) that the dropzone will accept. */\n    maxFileSize: PropTypes.number,\n    /** Text inside the dropzone. */\n    dropzoneText: PropTypes.string,\n    /** Custom CSS class name for dropzone container. */\n    dropzoneClass: PropTypes.string,\n    /** Custom CSS class name for text inside the container. */\n    dropzoneParagraphClass: PropTypes.string,\n    /** Disable feedback effect when dropping rejected files. */\n    disableRejectionFeedback: PropTypes.bool,\n    /** Shows previews **BELOW** the dropzone. */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the dropzone image. */\n    showFileNames: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n    /** Uses deletable Material-UI Chip components to display file names. */\n    useChipsForPreview: PropTypes.bool,\n    /**\n     * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n     *\n     * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n     */\n    previewChipProps: PropTypes.object,\n    /**\n     * Custom CSS classNames for preview Grid components.<br/>\n     * Should be in the form {container: string, item: string, image: string}.\n     */\n    previewGridClasses: PropTypes.object,\n    /**\n     * Props to pass to the Material-UI Grid components.<br/>\n     * Should be in the form {container: GridProps, item: GridProps}.\n     *\n     * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n     */\n    previewGridProps: PropTypes.object,\n    /** The label for the file preview section. */\n    previewText: PropTypes.string,\n    /**\n     * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n     *\n     * - can be a boolean (\"global\" `true` or `false` for all alerts).\n     * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n     *  - showAlerts={['error']} for only errors.\n     *  - showAlerts={['error', 'info']} for both errors and info.\n     *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n     *  - showAlerts={[]} is same as showAlerts={false}.\n     */\n    showAlerts: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\n    ]),\n    /**\n     * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n     *\n     * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n     */\n    alertSnackbarProps: PropTypes.object,\n    /**\n     * Props to pass to the Dropzone component.\n     *\n     * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n     */\n    dropzoneProps: PropTypes.object,\n    /**\n     * Attributes applied to the input element.\n     *\n     * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n     */\n    inputProps: PropTypes.object,\n    /**\n     * Get alert message to display when files limit is exceed.\n     *\n     * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n     *\n     * @param {number} filesLimit The `filesLimit` currently set for the component.\n     */\n    getFileLimitExceedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a new file is added.\n     *\n     * *Default*: \"File ${fileName} successfully added.\"\n     *\n     * @param {string} fileName The newly added file name.\n     */\n    getFileAddedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a file is removed.\n     *\n     * *Default*: \"File ${fileName} removed.\"\n     *\n     * @param {string} fileName The name of the removed file.\n     */\n    getFileRemovedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a file is rejected onDrop.\n     *\n     * *Default*: \"File ${rejectedFile.name} was rejected.\"\n     *\n     * @param {Object} rejectedFile The file that got rejected\n     * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n     * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n     */\n    getDropRejectMessage: PropTypes.func,\n    /**\n     * A function which determines which icon to display for a file preview.\n     *\n     * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n     *\n     * @param {FileObject} objectFile The file which the preview will belong to\n     * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n     */\n    getPreviewIcon: PropTypes.func,\n    /**\n     * Fired when new files are added to dropzone.\n     *\n     * @param {FileObject[]} newFiles The new files added to the dropzone.\n     */\n    onAdd: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {FileObject} deletedFileObject The file that was removed.\n     * @param {number} index The index of the removed file object.\n     */\n    onDelete: PropTypes.func,\n    /**\n     * Fired when the user drops files into the dropzone.\n     *\n     * @param {File[]} droppedFiles All the files dropped into the dropzone.\n     * @param {Event} event The react-dropzone drop event.\n     */\n    onDrop: PropTypes.func,\n    /**\n     * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n     *\n     * @param {File[]} rejectedFiles All the rejected files.\n     * @param {Event} event The react-dropzone drop event.\n     */\n    onDropRejected: PropTypes.func,\n    /**\n     * Fired when an alert is triggered.\n     *\n     * @param {string} message Alert message.\n     * @param {string} variant One of \"error\", \"info\", \"success\".\n     */\n    onAlert: PropTypes.func,\n};\n\nexport default withStyles(styles, {name: 'MuiDropzoneArea'})(DropzoneAreaBase);\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\nconst splitDropzoneAreaProps = (props) => {\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\n};\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\nclass DropzoneArea extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    render() {\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneAreaBase\n                {...dropzoneAreaProps}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n            />\n        );\n    }\n}\n\nDropzoneArea.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /**\n     * Fired when the files inside dropzone change.\n     *\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {File} deletedFile The file that was removed.\n     */\n    onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n// Split props related to DropzoneDialog from DropzoneArea ones\nfunction splitDropzoneDialogProps(allProps) {\n    const {\n        cancelButtonText,\n        dialogProps,\n        dialogTitle,\n        fullWidth,\n        maxWidth,\n        onClose,\n        onSave,\n        open,\n        submitButtonText,\n        ...dropzoneAreaProps\n    } = allProps;\n\n    return [\n        {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        },\n        dropzoneAreaProps,\n    ];\n}\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nclass DropzoneDialogBase extends React.PureComponent {\n    render() {\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\n        const {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        } = dropzoneDialogProps;\n\n        // Submit button state\n        const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n        return (\n            <Dialog\n                {...dialogProps}\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                onClose={onClose}\n                open={open}\n            >\n                <DialogTitle>{dialogTitle}</DialogTitle>\n\n                <DialogContent>\n                    <DropzoneAreaBase\n                        {...dropzoneAreaProps}\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        {cancelButtonText}\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        disabled={submitDisabled}\n                        onClick={onSave}\n                    >\n                        {submitButtonText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDropzoneDialogBase.defaultProps = {\n    open: false,\n    dialogTitle: 'Upload file',\n    dialogProps: {},\n    fullWidth: true,\n    maxWidth: 'sm',\n    cancelButtonText: 'Cancel',\n    submitButtonText: 'Submit',\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Sets whether the dialog is open or closed. */\n    open: PropTypes.bool,\n    /** The Dialog title. */\n    dialogTitle: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n    ]),\n    /**\n     * Props to pass to the Material-UI Dialog components.\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n     */\n    dialogProps: PropTypes.object,\n    /**\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\n     * Notice that the dialog width grow is limited by the default margin.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n     * Set to `false` to disable `maxWidth`.\n     */\n    maxWidth: PropTypes.string,\n    /** Cancel button text in dialog. */\n    cancelButtonText: PropTypes.string,\n    /** Submit button text in dialog. */\n    submitButtonText: PropTypes.string,\n    /**\n     * Fired when the modal is closed.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onClose: PropTypes.func,\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onSave: PropTypes.func,\n    /**\n     * Shows previews **BELOW** the dropzone.<br/>\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n     */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nclass DropzoneDialog extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    handleClose = (evt) => {\n        const {clearOnUnmount, onClose} = this.props;\n\n        if (onClose) {\n            onClose(evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    handleSave = (evt) => {\n        const {clearOnUnmount, onSave} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onSave) {\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    render() {\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneDialogBase\n                {...this.props}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n                onClose={this.handleClose}\n                onSave={this.handleSave}\n            />\n        );\n    }\n}\n\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneDialogBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {File[]} files All the files currently inside the Dropzone.\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\n     */\n    onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","palette","shape","spacing","root","imageContainer","position","zIndex","textAlign","opacity","image","height","width","maxWidth","color","text","primary","transition","boxSizing","boxShadow","borderRadius","removeButton","top","right","React.createElement","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","getPreviewIcon","container","clsx","map","fileObject","i","item","name","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","backgroundPosition","minHeight","backgroundColor","background","paper","border","borderColor","divider","cursor","overflow","active","animation","backgroundImage","backgroundSize","light","invalid","error","dark","main","textContainer","marginBottom","marginTop","icon","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","DropzoneAreaBase","state","openSnackBar","snackbarMessage","snackbarVariant","handleDropAccepted","acceptedFiles","evt","props","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","length","setState","notifyAlert","all","fileObjs","message","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","getFileRemovedMessage","onDelete","removedFileObj","handleCloseSnackbar","onAlert","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","Icon","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","getRootProps","getInputProps","isDragActive","isDragReject","className","Array","isArray","includes","React","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","string","number","elementType","oneOfType","oneOf","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","DropzoneArea","notifyFileChange","loadInitialFiles","initialFile","concat","console","log","addFiles","newFileObjects","deleteFile","removedFileObjIdx","remainingFileObjs","filter","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onClose","onSave","open","submitButtonText","DropzoneDialogBase","dropzoneDialogProps","submitDisabled","element","DropzoneDialog","handleClose","handleSave"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,MAAIA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,MAA4B,OAAhC,EAAyC;AACrC,WAAO,IAAP;AACH;AACJ;AAEM,SAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AAC7C,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAID,QAAQ,IAAI,OAAhB,EAAyB;AACrBC,IAAAA,IAAI,GAAID,QAAQ,GAAG,OAAZ,GAAuB,YAA9B;AACH,GAFD,MAEO,IAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACzBC,IAAAA,IAAI,GAAID,QAAQ,GAAG,IAAZ,GAAoB,YAA3B;AACH,GAFM,MAEA;AACHC,IAAAA,IAAI,GAAGD,QAAQ,GAAG,QAAlB;AACH;;AACD,SAAOC,IAAP;AACH;SAEqBC,iBAAtB;AAAA;AAAA;;;gFAAO,iBAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACoBC,KAAK,CAACD,GAAD,CADzB;;AAAA;AACGE,YAAAA,QADH;AAAA;AAAA,mBAEgBA,QAAQ,CAACC,IAAT,EAFhB;;AAAA;AAEGC,YAAAA,IAFH;AAGGC,YAAAA,QAHH,GAGc;AAACX,cAAAA,IAAI,EAAEU,IAAI,CAACV;AAAZ,aAHd;AAIGY,YAAAA,QAJH,GAIcN,GAAG,CAACO,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwBZ,KAAxB,CAA8B,GAA9B,EAAmCa,GAAnC,EAJd;AAAA,6CAKI,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,EAAiBE,QAAjB,EAA2BD,QAA3B,CALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAQA,SAASK,QAAT,CAAkBjB,IAAlB,EAAwB;AAC3B,SAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,KAAD,EAAW;AAAA;;AACvBL,MAAAA,OAAO,CAACK,KAAD,aAACA,KAAD,wCAACA,KAAK,CAAEC,MAAR,kDAAC,cAAeC,MAAhB,CAAP;AACH,KAFD;;AAGAL,IAAAA,MAAM,CAACM,OAAP,GAAiB,UAACH,KAAD,EAAW;AACxBH,MAAAA,MAAM,CAACO,KAAP;AACAR,MAAAA,MAAM,CAACI,KAAD,CAAN;AACH,KAHD;;AAIAH,IAAAA,MAAM,CAACQ,aAAP,CAAqB7B,IAArB;AACH,GAVM,CAAP;AAWH;;AC5BD,IAAM8B,MAAM,GAAG,SAATA,MAAS;AAAA,MAAEC,OAAF,QAAEA,OAAF;AAAA,MAAWC,KAAX,QAAWA,KAAX;AAAA,MAAkBC,OAAlB,QAAkBA,OAAlB;AAAA,SAAgC;AAC3CC,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,cAAc,EAAE;AACZC,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,MAAM,EAAE,EAFI;AAGZC,MAAAA,SAAS,EAAE,QAHC;AAIZ,wBAAkB;AACdC,QAAAA,OAAO,EAAE;AADK,OAJN;AAOZ,+BAAyB;AACrBA,QAAAA,OAAO,EAAE;AADY;AAPb,KAF2B;AAa3CC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,GADL;AAEHC,MAAAA,KAAK,EAAE,SAFJ;AAGHC,MAAAA,QAAQ,EAAE,MAHP;AAIHC,MAAAA,KAAK,EAAEb,OAAO,CAACc,IAAR,CAAaC,OAJjB;AAKHC,MAAAA,UAAU,EAAE,8CALT;AAMHC,MAAAA,SAAS,EAAE,YANR;AAOHC,MAAAA,SAAS,EAAE,8DAPR;AAQHC,MAAAA,YAAY,EAAElB,KAAK,CAACkB,YARjB;AASHb,MAAAA,MAAM,EAAE,CATL;AAUHE,MAAAA,OAAO,EAAE;AAVN,KAboC;AAyB3CY,IAAAA,YAAY,EAAE;AACVJ,MAAAA,UAAU,EAAE,UADF;AAEVX,MAAAA,QAAQ,EAAE,UAFA;AAGVG,MAAAA,OAAO,EAAE,CAHC;AAIVa,MAAAA,GAAG,EAAEnB,OAAO,CAAC,CAAC,CAAF,CAJF;AAKVoB,MAAAA,KAAK,EAAEpB,OAAO,CAAC,CAAC,CAAF,CALJ;AAMVS,MAAAA,KAAK,EAAE,EANG;AAOVD,MAAAA,MAAM,EAAE,EAPE;AAQV,iBAAW;AACPF,QAAAA,OAAO,EAAE;AADF;AARD;AAzB6B,GAAhC;AAAA,CAAf;;yBA6G4Be,oBAAC,UAAD;;AAtE5B,SAASC,WAAT,QAUG;AAAA,MATCC,WASD,SATCA,WASD;AAAA,MARCC,YAQD,SARCA,YAQD;AAAA,MAPCC,aAOD,SAPCA,aAOD;AAAA,MANCC,kBAMD,SANCA,kBAMD;AAAA,MALCC,gBAKD,SALCA,gBAKD;AAAA,MAJCC,kBAID,SAJCA,kBAID;AAAA,MAHCC,gBAGD,SAHCA,gBAGD;AAAA,MAFCC,OAED,SAFCA,OAED;AAAA,MADCC,cACD,SADCA,cACD;;AACC,MAAIL,kBAAJ,EAAwB;AACpB,wBACIL,oBAAC,IAAD;AACI,MAAA,OAAO,EAAE,CADb;AAEI,MAAA,SAAS,EAAC;AAFd,OAGQQ,gBAAgB,CAACG,SAHzB;AAII,MAAA,SAAS,EAAE,IAJf;AAKI,MAAA,SAAS,EAAEC,IAAI,CAACH,OAAO,CAAC7B,IAAT,EAAe2B,kBAAkB,CAACI,SAAlC;AALnB,QAOKT,WAAW,CAACW,GAAZ,CAAgB,UAACC,UAAD,EAAaC,CAAb,EAAmB;AAAA;;AAChC,0BACIf,oBAAC,IAAD,eACQQ,gBAAgB,CAACQ,IADzB;AAEI,QAAA,IAAI,EAAE,IAFV;AAGI,QAAA,GAAG,yDAAKF,UAAU,CAACpE,IAAhB,qDAAK,iBAAiBuE,IAAtB,yEAA8B,MAA9B,cAAwCF,CAAxC,CAHP;AAII,QAAA,SAAS,EAAEN,OAAO,CAAC5B;AAJvB,uBAMImB,oBAAC,IAAD;AACI,QAAA,OAAO,EAAC;AADZ,SAEQM,gBAFR;AAGI,QAAA,KAAK,EAAEQ,UAAU,CAACpE,IAAX,CAAgBuE,IAH3B;AAII,QAAA,QAAQ,EAAEd,YAAY,CAACY,CAAD;AAJ1B,SANJ,CADJ;AAeH,KAhBA,CAPL,CADJ;AA2BH;;AAED,sBACIf,oBAAC,IAAD;AACI,IAAA,OAAO,EAAE;AADb,KAEQQ,gBAAgB,CAACG,SAFzB;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,SAAS,EAAEC,IAAI,CAACH,OAAO,CAAC7B,IAAT,EAAe2B,kBAAkB,CAACI,SAAlC;AAJnB,MAMKT,WAAW,CAACW,GAAZ,CAAgB,UAACC,UAAD,EAAaC,CAAb,EAAmB;AAAA;;AAChC,wBACIf,oBAAC,IAAD;AACI,MAAA,EAAE,EAAE;AADR,OAEQQ,gBAAgB,CAACQ,IAFzB;AAGI,MAAA,IAAI,EAAE,IAHV;AAII,MAAA,GAAG,2DAAKF,UAAU,CAACpE,IAAhB,sDAAK,kBAAiBuE,IAAtB,2EAA8B,MAA9B,cAAwCF,CAAxC,CAJP;AAKI,MAAA,SAAS,EAAEH,IAAI,CAACH,OAAO,CAAC5B,cAAT,EAAyB0B,kBAAkB,CAACS,IAA5C;AALnB,QAOKN,cAAc,CAACI,UAAD,EAAaL,OAAb,CAPnB,EASKL,aAAa,iBACVJ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,SAAS,EAAC;AAAtC,OACKc,UAAU,CAACpE,IAAX,CAAgBuE,IADrB,CAVR,eAeIjB,oBAAC,GAAD;AACI,MAAA,OAAO,EAAEG,YAAY,CAACY,CAAD,CADzB;AAEI,oBAAW,QAFf;AAGI,MAAA,SAAS,EAAEN,OAAO,CAACZ;AAHvB,aAfJ,CADJ;AAyBH,GA1BA,CANL,CADJ;AAoCH;;AAED,wCAAAI,WAAW,CAACiB,SAAZ,GAAwB;AACpBT,EAAAA,OAAO,EAAEU,SAAS,CAACC,MAAV,CAAiBC,UADN;AAEpBnB,EAAAA,WAAW,EAAEiB,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACC,MAA5B,EAAoCC,UAF7B;AAGpBX,EAAAA,cAAc,EAAES,SAAS,CAACI,IAAV,CAAeF,UAHX;AAIpBlB,EAAAA,YAAY,EAAEgB,SAAS,CAACI,IAAV,CAAeF,UAJT;AAKpBf,EAAAA,gBAAgB,EAAEa,SAAS,CAACC,MALR;AAMpBb,EAAAA,kBAAkB,EAAEY,SAAS,CAACC,MANV;AAOpBZ,EAAAA,gBAAgB,EAAEW,SAAS,CAACC,MAPR;AAQpBhB,EAAAA,aAAa,EAAEe,SAAS,CAACK,IARL;AASpBnB,EAAAA,kBAAkB,EAAEc,SAAS,CAACK;AATV,CAAxB;AAYA,oBAAeC,mBAAU,CAACjD,MAAD,EAAS;AAACyC,EAAAA,IAAI,EAAE;AAAP,CAAT,CAAV,CAAqDhB,WAArD,CAAf;;;;;;AC9HA,IAAMzB,QAAM,GAAG,SAATA,MAAS;AAAA,MAAEC,OAAF,QAAEA,OAAF;AAAA,MAAWC,KAAX,QAAWA,KAAX;AAAA,MAAkBC,OAAlB,QAAkBA,OAAlB;AAAA,SAAgC;AAC3C,2BAAuB;AACnB,YAAM;AACF+C,QAAAA,kBAAkB,EAAE;AADlB,OADa;AAInB,cAAQ;AACJA,QAAAA,kBAAkB,EAAE;AADhB;AAJW,KADoB;AAS3C9C,IAAAA,IAAI,EAAE;AACFE,MAAAA,QAAQ,EAAE,UADR;AAEFM,MAAAA,KAAK,EAAE,MAFL;AAGFuC,MAAAA,SAAS,EAAE,OAHT;AAIFC,MAAAA,eAAe,EAAEnD,OAAO,CAACoD,UAAR,CAAmBC,KAJlC;AAKFC,MAAAA,MAAM,EAAE,QALN;AAMFC,MAAAA,WAAW,EAAEvD,OAAO,CAACwD,OANnB;AAOFrC,MAAAA,YAAY,EAAElB,KAAK,CAACkB,YAPlB;AAQFF,MAAAA,SAAS,EAAE,YART;AASFwC,MAAAA,MAAM,EAAE,SATN;AAUFC,MAAAA,QAAQ,EAAE;AAVR,KATqC;AAqB3CC,IAAAA,MAAM,EAAE;AACJC,MAAAA,SAAS,EAAE,yCADP;AAEJ;AACAC,MAAAA,eAAe,8CAAuC7D,OAAO,CAACoD,UAAR,CAAmBC,KAA1D,eAAoErD,OAAO,CAACoD,UAAR,CAAmBC,KAAvF,oBAAsGrD,OAAO,CAACwD,OAA9G,oBAA+HxD,OAAO,CAACwD,OAAvI,WAHX;AAIJM,MAAAA,cAAc,EAAE,WAJZ;AAKJR,MAAAA,MAAM,EAAE,OALJ;AAMJC,MAAAA,WAAW,EAAEvD,OAAO,CAACe,OAAR,CAAgBgD;AANzB,KArBmC;AA6B3CC,IAAAA,OAAO,EAAE;AACL;AACAH,MAAAA,eAAe,8CAAuC7D,OAAO,CAACiE,KAAR,CAAcF,KAArD,eAA+D/D,OAAO,CAACiE,KAAR,CAAcF,KAA7E,oBAA4F/D,OAAO,CAACiE,KAAR,CAAcC,IAA1G,oBAAwHlE,OAAO,CAACiE,KAAR,CAAcC,IAAtI,WAFV;AAGLX,MAAAA,WAAW,EAAEvD,OAAO,CAACiE,KAAR,CAAcE;AAHtB,KA7BkC;AAkC3CC,IAAAA,aAAa,EAAE;AACX7D,MAAAA,SAAS,EAAE;AADA,KAlC4B;AAqC3CO,IAAAA,IAAI,EAAE;AACFuD,MAAAA,YAAY,EAAEnE,OAAO,CAAC,CAAD,CADnB;AAEFoE,MAAAA,SAAS,EAAEpE,OAAO,CAAC,CAAD;AAFhB,KArCqC;AAyC3CqE,IAAAA,IAAI,EAAE;AACF5D,MAAAA,KAAK,EAAE,EADL;AAEFD,MAAAA,MAAM,EAAE,EAFN;AAGFG,MAAAA,KAAK,EAAEb,OAAO,CAACc,IAAR,CAAaC;AAHlB;AAzCqC,GAAhC;AAAA,CAAf;;AAgDA,IAAMyD,2BAA2B,GAAG;AAChCC,EAAAA,UAAU,EAAE,MADoB;AAEhCC,EAAAA,QAAQ,EAAE;AAFsB,CAApC;;AAKA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACtC,UAAD,EAAaL,OAAb,EAAyB;AACnD,MAAIhE,OAAO,CAACqE,UAAU,CAACpE,IAAZ,CAAX,EAA8B;AAC1B,wBAAQsD;AACJ,MAAA,SAAS,EAAES,OAAO,CAACvB,KADf;AAEJ,MAAA,IAAI,EAAC,cAFD;AAGJ,MAAA,GAAG,EAAE4B,UAAU,CAACzD;AAHZ,MAAR;AAKH;;AAED,sBAAO2C,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAES,OAAO,CAACvB;AAAnC,IAAP;AACH,CAVD;AAYA;;;;;IAGMmE;;;;;;;;;;;;;;;UACFC,QAAQ;AACJC,MAAAA,YAAY,EAAE,KADV;AAEJC,MAAAA,eAAe,EAAE,EAFb;AAGJC,MAAAA,eAAe,EAAE;AAHb;;UAcRC;2EAAqB,kBAAMC,aAAN,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BACgF,MAAKC,KADrF,EACV3D,WADU,eACVA,WADU,EACG4D,UADH,eACGA,UADH,EACeC,mBADf,eACeA,mBADf,EACoCC,yBADpC,eACoCA,yBADpC,EAC+DC,KAD/D,eAC+DA,KAD/D,EACsEC,MADtE,eACsEA,MADtE;;AAAA,sBAGbJ,UAAU,GAAG,CAAb,IAAkB5D,WAAW,CAACiE,MAAZ,GAAqBR,aAAa,CAACQ,MAAnC,GAA4CL,UAHjD;AAAA;AAAA;AAAA;;AAIb,sBAAKM,QAAL,CAAc;AACVb,kBAAAA,YAAY,EAAE,IADJ;AAEVC,kBAAAA,eAAe,EAAEQ,yBAAyB,CAACF,UAAD,CAFhC;AAGVL,kBAAAA,eAAe,EAAE;AAHP,iBAAd,EAIG,MAAKY,WAJR;;AAJa;;AAAA;AAYjB;AACA,oBAAIH,MAAJ,EAAY;AACRA,kBAAAA,MAAM,CAACP,aAAD,EAAgBC,GAAhB,CAAN;AACH,iBAfgB;;;AAAA;AAAA,uBAkBMhG,OAAO,CAAC0G,GAAR,CACnBX,aAAa,CAAC9C,GAAd;AAAA,uFAAkB,iBAAMnE,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACKiB,QAAQ,CAACjB,IAAD,CADb;;AAAA;AACRW,4BAAAA,IADQ;AAAA,6DAEP;AACHX,8BAAAA,IAAI,EAAJA,IADG;AAEHW,8BAAAA,IAAI,EAAJA;AAFG,6BAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB;;AAAA;AAAA;AAAA;AAAA,oBADmB,CAlBN;;AAAA;AAkBXkH,gBAAAA,QAlBW;;AA4BjB;AACA,oBAAIN,KAAJ,EAAW;AACPA,kBAAAA,KAAK,CAACM,QAAD,CAAL;AACH,iBA/BgB;;;AAkCXC,gBAAAA,OAlCW,GAkCDD,QAAQ,CAACE,MAAT,CAAgB,UAACC,GAAD,EAAMC,OAAN;AAAA,yBAAkBD,GAAG,GAAGX,mBAAmB,CAACY,OAAO,CAACjI,IAAR,CAAauE,IAAd,CAA3C;AAAA,iBAAhB,EAAgF,EAAhF,CAlCC;;AAmCjB,sBAAKmD,QAAL,CAAc;AACVb,kBAAAA,YAAY,EAAE,IADJ;AAEVC,kBAAAA,eAAe,EAAEgB,OAFP;AAGVf,kBAAAA,eAAe,EAAE;AAHP,iBAAd,EAIG,MAAKY,WAJR;;AAnCiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;UA0CrBO,qBAAqB,UAACC,aAAD,EAAgBjB,GAAhB,EAAwB;AAAA,yBASrC,MAAKC,KATgC;AAAA,UAErCF,aAFqC,gBAErCA,aAFqC;AAAA,UAGrCG,UAHqC,gBAGrCA,UAHqC;AAAA,UAIrC5D,WAJqC,gBAIrCA,WAJqC;AAAA,UAKrC4E,oBALqC,gBAKrCA,oBALqC;AAAA,UAMrCd,yBANqC,gBAMrCA,yBANqC;AAAA,UAOrCe,WAPqC,gBAOrCA,WAPqC;AAAA,UAQrCC,cARqC,gBAQrCA,cARqC;AAWzC,UAAIR,OAAO,GAAG,EAAd;;AACA,UAAItE,WAAW,CAACiE,MAAZ,GAAqBU,aAAa,CAACV,MAAnC,GAA4CL,UAAhD,EAA4D;AACxDU,QAAAA,OAAO,GAAGR,yBAAyB,CAACF,UAAD,CAAnC;AACH,OAFD,MAEO;AACHe,QAAAA,aAAa,CAACI,OAAd,CAAsB,UAACC,YAAD,EAAkB;AACpCV,UAAAA,OAAO,GAAGM,oBAAoB,CAACI,YAAD,EAAevB,aAAf,EAA8BoB,WAA9B,CAA9B;AACH,SAFD;AAGH;;AAED,UAAIC,cAAJ,EAAoB;AAChBA,QAAAA,cAAc,CAACH,aAAD,EAAgBjB,GAAhB,CAAd;AACH;;AAED,YAAKQ,QAAL,CAAc;AACVb,QAAAA,YAAY,EAAE,IADJ;AAEVC,QAAAA,eAAe,EAAEgB,OAFP;AAGVf,QAAAA,eAAe,EAAE;AAHP,OAAd,EAIG,MAAKY,WAJR;AAKH;;UAEDlE,eAAe,UAACgF,SAAD;AAAA,aAAe,UAACjH,KAAD,EAAW;AACrCA,QAAAA,KAAK,CAACkH,eAAN;AADqC,2BAGkB,MAAKvB,KAHvB;AAAA,YAG9B3D,WAH8B,gBAG9BA,WAH8B;AAAA,YAGjBmF,qBAHiB,gBAGjBA,qBAHiB;AAAA,YAGMC,QAHN,gBAGMA,QAHN;;AAMrC,YAAMC,cAAc,GAAGrF,WAAW,CAACiF,SAAD,CAAlC,CANqC;;AASrC,YAAIG,QAAJ,EAAc;AACVA,UAAAA,QAAQ,CAACC,cAAD,EAAiBJ,SAAjB,CAAR;AACH;;AAED,cAAKf,QAAL,CAAc;AACVb,UAAAA,YAAY,EAAE,IADJ;AAEVC,UAAAA,eAAe,EAAE6B,qBAAqB,CAACE,cAAc,CAAC7I,IAAf,CAAoBuE,IAArB,CAF5B;AAGVwC,UAAAA,eAAe,EAAE;AAHP,SAAd,EAIG,MAAKY,WAJR;AAKH,OAlBc;AAAA;;UAoBfmB,sBAAsB,YAAM;AACxB,YAAKpB,QAAL,CAAc;AACVb,QAAAA,YAAY,EAAE;AADJ,OAAd;AAGH;;;;;;;kCAzGa;AAAA,UACHkC,OADG,GACQ,KAAK5B,KADb,CACH4B,OADG;AAAA,wBAE+C,KAAKnC,KAFpD;AAAA,UAEHC,YAFG,eAEHA,YAFG;AAAA,UAEWC,eAFX,eAEWA,eAFX;AAAA,UAE4BC,eAF5B,eAE4BA,eAF5B;;AAGV,UAAIF,YAAY,IAAIkC,OAApB,EAA6B;AACzBA,QAAAA,OAAO,CAACjC,eAAD,EAAkBC,eAAlB,CAAP;AACH;AACJ;;;6BAqGQ;AAAA;;AAAA,yBA0BD,KAAKI,KA1BJ;AAAA,UAEDF,aAFC,gBAEDA,aAFC;AAAA,UAGD+B,kBAHC,gBAGDA,kBAHC;AAAA,UAIDjF,OAJC,gBAIDA,OAJC;AAAA,UAKDkF,wBALC,gBAKDA,wBALC;AAAA,UAMDC,aANC,gBAMDA,aANC;AAAA,UAODC,sBAPC,gBAODA,sBAPC;AAAA,UAQDC,aARC,gBAQDA,aARC;AAAA,UASDC,YATC,gBASDA,YATC;AAAA,UAUD7F,WAVC,gBAUDA,WAVC;AAAA,UAWD4D,UAXC,gBAWDA,UAXC;AAAA,UAYDpD,cAZC,gBAYDA,cAZC;AAAA,UAaDsF,IAbC,gBAaDA,IAbC;AAAA,UAcDC,UAdC,gBAcDA,UAdC;AAAA,UAeDlB,WAfC,gBAeDA,WAfC;AAAA,UAgBDzE,gBAhBC,gBAgBDA,gBAhBC;AAAA,UAiBDC,kBAjBC,gBAiBDA,kBAjBC;AAAA,UAkBDC,gBAlBC,gBAkBDA,gBAlBC;AAAA,UAmBD0F,WAnBC,gBAmBDA,WAnBC;AAAA,UAoBDC,UApBC,gBAoBDA,UApBC;AAAA,UAqBD/F,aArBC,gBAqBDA,aArBC;AAAA,UAsBDgG,sBAtBC,gBAsBDA,sBAtBC;AAAA,UAuBDC,YAvBC,gBAuBDA,YAvBC;AAAA,UAwBDC,sBAxBC,gBAwBDA,sBAxBC;AAAA,UAyBDjG,kBAzBC,gBAyBDA,kBAzBC;AAAA,yBA2BoD,KAAKiD,KA3BzD;AAAA,UA2BEC,YA3BF,gBA2BEA,YA3BF;AAAA,UA2BgBC,eA3BhB,gBA2BgBA,eA3BhB;AAAA,UA2BiCC,eA3BjC,gBA2BiCA,eA3BjC;AA6BL,UAAM8C,WAAW,GAAG5C,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAE6C,IAAf,CAAoB,GAApB,CAApB;AACA,UAAMC,UAAU,GAAG3C,UAAU,GAAG,CAAhC;AACA,UAAM4C,eAAe,GAAGL,YAAY,IAAInG,WAAW,CAACiE,MAAZ,GAAqB,CAA7D;AACA,UAAMwC,yBAAyB,GAAGL,sBAAsB,IAAIpG,WAAW,CAACiE,MAAZ,GAAqB,CAAjF;AAEA,0BACInE,oBAAC4G,cAAD,qBACI5G,oBAAC,QAAD,eACQ8F,aADR;AAEI,QAAA,MAAM,EAAES,WAFZ;AAGI,QAAA,cAAc,EAAE,KAAK7C,kBAHzB;AAII,QAAA,cAAc,EAAE,KAAKkB,kBAJzB;AAKI,QAAA,OAAO,EAAEG,WALb;AAMI,QAAA,QAAQ,EAAE0B;AANd,UAQK;AAAA,YAAEI,YAAF,SAAEA,YAAF;AAAA,YAAgBC,aAAhB,SAAgBA,aAAhB;AAAA,YAA+BC,YAA/B,SAA+BA,YAA/B;AAAA,YAA6CC,YAA7C,SAA6CA,YAA7C;AAAA,4BACGhH,2BACQ6G,YAAY,CAAC;AACbI,UAAAA,SAAS,EAAErG,IAAI,CACXH,OAAO,CAAC7B,IADG,EAEXgH,aAFW,EAGXmB,YAHW,IAGKtG,OAAO,CAAC2B,MAHb,EAIV,CAACuD,wBAJS,IAImBqB,YAJnB,IAIoCvG,OAAO,CAACgC,OAJ5C;AADF,SAAD,CADpB,eAUIzC,6BAAW8G,aAAa,CAACb,UAAD,CAAxB,CAVJ,eAYIjG;AAAK,UAAA,SAAS,EAAES,OAAO,CAACoC;AAAxB,wBACI7C,oBAAC,UAAD;AACI,UAAA,OAAO,EAAC,IADZ;AAEI,UAAA,SAAS,EAAC,GAFd;AAGI,UAAA,SAAS,EAAEY,IAAI,CAACH,OAAO,CAAClB,IAAT,EAAesG,sBAAf;AAHnB,WAKKE,YALL,CADJ,EAQKC,IAAI,gBACDhG,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAES,OAAO,CAACuC;AAAzB,UADC,gBAGDhD,oBAAC,eAAD;AAAiB,UAAA,SAAS,EAAES,OAAO,CAACuC;AAApC,UAXR,CAZJ,EA2BK2D,yBAAyB,iBACtB3G,oBAACC,aAAD;AACI,UAAA,WAAW,EAAEC,WADjB;AAEI,UAAA,YAAY,EAAE,MAAI,CAACC,YAFvB;AAGI,UAAA,cAAc,EAAEO,cAHpB;AAII,UAAA,aAAa,EAAEN,aAJnB;AAKI,UAAA,kBAAkB,EAAEC,kBALxB;AAMI,UAAA,gBAAgB,EAAEC,gBANtB;AAOI,UAAA,kBAAkB,EAAEC,kBAPxB;AAQI,UAAA,gBAAgB,EAAEC;AARtB,UA5BR,CADH;AAAA,OARL,CADJ,EAqDKkG,eAAe,iBACZ1G,oBAAC4G,cAAD,qBACI5G,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC;AAA1C,SACKkG,WADL,CADJ,eAKIlG,oBAACC,aAAD;AACI,QAAA,WAAW,EAAEC,WADjB;AAEI,QAAA,YAAY,EAAE,KAAKC,YAFvB;AAGI,QAAA,cAAc,EAAEO,cAHpB;AAII,QAAA,aAAa,EAAE0F,sBAJnB;AAKI,QAAA,kBAAkB,EAAE/F,kBALxB;AAMI,QAAA,gBAAgB,EAAEC,gBANtB;AAOI,QAAA,kBAAkB,EAAEC,kBAPxB;AAQI,QAAA,gBAAgB,EAAEC;AARtB,QALJ,CAtDR,EAwEK,CAAE,OAAO2F,UAAP,KAAsB,SAAtB,IAAmCA,UAApC,IACGe,KAAK,CAACC,OAAN,CAAchB,UAAd,KAA6BA,UAAU,CAACiB,QAAX,CAAoB3D,eAApB,CADjC,kBAEGzD,oBAAC,QAAD;AACI,QAAA,YAAY,EAAEiD,2BADlB;AAEI,QAAA,gBAAgB,EAAE;AAFtB,SAGQyC,kBAHR;AAII,QAAA,IAAI,EAAEnC,YAJV;AAKI,QAAA,OAAO,EAAE,KAAKiC;AALlB,uBAOIxF,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAEyD,eAAjB;AAAkC,QAAA,OAAO,EAAE,KAAK+B;AAAhD,SAAsEhC,eAAtE,CAPJ,CA1ER,CADJ;AAuFH;;;;EA3O0B6D;;AA8O/BhE,gBAAgB,CAACiE,YAAjB,GAAgC;AAC5B3D,EAAAA,aAAa,EAAE,EADa;AAE5BG,EAAAA,UAAU,EAAE,CAFgB;AAG5B5D,EAAAA,WAAW,EAAE,EAHe;AAI5B6E,EAAAA,WAAW,EAAE,OAJe;AAK5BgB,EAAAA,YAAY,EAAE,oCALc;AAM5BG,EAAAA,WAAW,EAAE,UANe;AAO5BP,EAAAA,wBAAwB,EAAE,KAPE;AAQ5BU,EAAAA,YAAY,EAAE,KARc;AAQP;AACrBC,EAAAA,sBAAsB,EAAE,IATI;AAU5BlG,EAAAA,aAAa,EAAE,KAVa;AAW5BgG,EAAAA,sBAAsB,EAAE,KAXI;AAY5B/F,EAAAA,kBAAkB,EAAE,KAZQ;AAa5BC,EAAAA,gBAAgB,EAAE,EAbU;AAc5BC,EAAAA,kBAAkB,EAAE,EAdQ;AAe5BC,EAAAA,gBAAgB,EAAE,EAfU;AAgB5B2F,EAAAA,UAAU,EAAE,IAhBgB;AAiB5BT,EAAAA,kBAAkB,EAAE;AAChB6B,IAAAA,YAAY,EAAE;AACVrE,MAAAA,UAAU,EAAE,MADF;AAEVC,MAAAA,QAAQ,EAAE;AAFA,KADE;AAKhBqE,IAAAA,gBAAgB,EAAE;AALF,GAjBQ;AAwB5BxD,EAAAA,yBAAyB,EAAE,mCAACF,UAAD;AAAA,oEAAmEA,UAAnE;AAAA,GAxBC;AAyB5BC,EAAAA,mBAAmB,EAAE,6BAAC0D,QAAD;AAAA,0BAAuBA,QAAvB;AAAA,GAzBO;AA0B5B/G,EAAAA,cAAc,EAAE0C,qBA1BY;AA2B5BiC,EAAAA,qBAAqB,EAAE,+BAACoC,QAAD;AAAA,0BAAuBA,QAAvB;AAAA,GA3BK;AA4B5B3C,EAAAA,oBAAoB,EAAE,8BAACI,YAAD,EAAevB,aAAf,EAA8BoB,WAA9B,EAA8C;AAChE,QAAIP,OAAO,kBAAWU,YAAY,CAACjE,IAAxB,oBAAX;;AACA,QAAI,CAAC0C,aAAa,CAACyD,QAAd,CAAuBlC,YAAY,CAACvI,IAApC,CAAL,EAAgD;AAC5C6H,MAAAA,OAAO,IAAI,2BAAX;AACH;;AACD,QAAIU,YAAY,CAACnI,IAAb,GAAoBgI,WAAxB,EAAqC;AACjCP,MAAAA,OAAO,IAAI,oCAAoC3H,sBAAsB,CAACkI,WAAD,CAA1D,GAA0E,IAArF;AACH;;AACD,WAAOP,OAAP;AACH;AArC2B,CAAhC;AAwCA,AAAO,IAAMkD,eAAe,GAAGvG,SAAS,CAACzC,KAAV,CAAgB;AAC3ChC,EAAAA,IAAI,EAAEyE,SAAS,CAACC,MAD2B;AAE3C/D,EAAAA,IAAI,EAAE8D,SAAS,CAACwG;AAF2B,CAAhB,CAAxB;AAKP,wCAAAtE,gBAAgB,CAACnC,SAAjB,GAA6B;AACzB;AACAT,EAAAA,OAAO,EAAEU,SAAS,CAACC,MAAV,CAAiBC,UAFD;;AAGzB;;;AAGAsC,EAAAA,aAAa,EAAExC,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACyG,MAA5B,CANU;;AAOzB;AACA9D,EAAAA,UAAU,EAAE3C,SAAS,CAAC0G,MARG;;AASzB;AACA7B,EAAAA,IAAI,EAAE7E,SAAS,CAAC2G,WAVS;;AAWzB;AACA5H,EAAAA,WAAW,EAAEiB,SAAS,CAACG,OAAV,CAAkBoG,eAAlB,CAZY;;AAazB;AACA3C,EAAAA,WAAW,EAAE5D,SAAS,CAAC0G,MAdE;;AAezB;AACA9B,EAAAA,YAAY,EAAE5E,SAAS,CAACyG,MAhBC;;AAiBzB;AACAhC,EAAAA,aAAa,EAAEzE,SAAS,CAACyG,MAlBA;;AAmBzB;AACA/B,EAAAA,sBAAsB,EAAE1E,SAAS,CAACyG,MApBT;;AAqBzB;AACAjC,EAAAA,wBAAwB,EAAExE,SAAS,CAACK,IAtBX;;AAuBzB;AACA6E,EAAAA,YAAY,EAAElF,SAAS,CAACK,IAxBC;;AAyBzB;AACA8E,EAAAA,sBAAsB,EAAEnF,SAAS,CAACK,IA1BT;;AA2BzB;AACApB,EAAAA,aAAa,EAAEe,SAAS,CAACK,IA5BA;;AA6BzB;AACA4E,EAAAA,sBAAsB,EAAEjF,SAAS,CAACK,IA9BT;;AA+BzB;AACAnB,EAAAA,kBAAkB,EAAEc,SAAS,CAACK,IAhCL;;AAiCzB;;;;;AAKAlB,EAAAA,gBAAgB,EAAEa,SAAS,CAACC,MAtCH;;AAuCzB;;;;AAIAb,EAAAA,kBAAkB,EAAEY,SAAS,CAACC,MA3CL;;AA4CzB;;;;;;AAMAZ,EAAAA,gBAAgB,EAAEW,SAAS,CAACC,MAlDH;;AAmDzB;AACA8E,EAAAA,WAAW,EAAE/E,SAAS,CAACyG,MApDE;;AAqDzB;;;;;;;;;;AAUAzB,EAAAA,UAAU,EAAEhF,SAAS,CAAC4G,SAAV,CAAoB,CAC5B5G,SAAS,CAACK,IADkB,EAE5BL,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAAC6G,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,CAAhB,CAAlB,CAF4B,CAApB,CA/Da;;AAmEzB;;;;;AAKAtC,EAAAA,kBAAkB,EAAEvE,SAAS,CAACC,MAxEL;;AAyEzB;;;;;AAKA0E,EAAAA,aAAa,EAAE3E,SAAS,CAACC,MA9EA;;AA+EzB;;;;;AAKA6E,EAAAA,UAAU,EAAE9E,SAAS,CAACC,MApFG;;AAqFzB;;;;;;;AAOA4C,EAAAA,yBAAyB,EAAE7C,SAAS,CAACI,IA5FZ;;AA6FzB;;;;;;;AAOAwC,EAAAA,mBAAmB,EAAE5C,SAAS,CAACI,IApGN;;AAqGzB;;;;;;;AAOA8D,EAAAA,qBAAqB,EAAElE,SAAS,CAACI,IA5GR;;AA6GzB;;;;;;;;;AASAuD,EAAAA,oBAAoB,EAAE3D,SAAS,CAACI,IAtHP;;AAuHzB;;;;;;;;AAQAb,EAAAA,cAAc,EAAES,SAAS,CAACI,IA/HD;;AAgIzB;;;;;AAKA0C,EAAAA,KAAK,EAAE9C,SAAS,CAACI,IArIQ;;AAsIzB;;;;;;AAMA+D,EAAAA,QAAQ,EAAEnE,SAAS,CAACI,IA5IK;;AA6IzB;;;;;;AAMA2C,EAAAA,MAAM,EAAE/C,SAAS,CAACI,IAnJO;;AAoJzB;;;;;;AAMAyD,EAAAA,cAAc,EAAE7D,SAAS,CAACI,IA1JD;;AA2JzB;;;;;;AAMAkE,EAAAA,OAAO,EAAEtE,SAAS,CAACI;AAjKM,CAA7B;AAoKA,yBAAeE,mBAAU,CAACjD,QAAD,EAAS;AAACyC,EAAAA,IAAI,EAAE;AAAP,CAAT,CAAV,CAA8CoC,gBAA9C,CAAf;;;;;;AC1gBA,IAAM4E,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACpE,KAAD,EAAW;AAAA,MAC/BqE,cAD+B,GAC2CrE,KAD3C,CAC/BqE,cAD+B;AAAA,MACfC,YADe,GAC2CtE,KAD3C,CACfsE,YADe;AAAA,MACDC,QADC,GAC2CvE,KAD3C,CACDuE,QADC;AAAA,MACS9C,QADT,GAC2CzB,KAD3C,CACSyB,QADT;AAAA,MACsB+C,iBADtB,4BAC2CxE,KAD3C;;AAEtC,SAAO,CAAC;AAACqE,IAAAA,cAAc,EAAdA,cAAD;AAAiBC,IAAAA,YAAY,EAAZA,YAAjB;AAA+BC,IAAAA,QAAQ,EAARA,QAA/B;AAAyC9C,IAAAA,QAAQ,EAARA;AAAzC,GAAD,EAAqD+C,iBAArD,CAAP;AACH,CAHD;AAKA;;;;;;;;;IAOMC;;;;;;;;;;;;;;;UACFhF,QAAQ;AACJpD,MAAAA,WAAW,EAAE;AADT;;UAkBRqI,mBAAmB,YAAM;AAAA,UACdH,QADc,GACF,MAAKvE,KADH,CACduE,QADc;AAAA,UAEdlI,WAFc,GAEC,MAAKoD,KAFN,CAEdpD,WAFc;;AAIrB,UAAIkI,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAAClI,WAAW,CAACW,GAAZ,CAAgB,UAACC,UAAD;AAAA,iBAAgBA,UAAU,CAACpE,IAA3B;AAAA,SAAhB,CAAD,CAAR;AACH;AACJ;;UAED8L,yFAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRL,cAAAA,YADQ,GACQ,MAAKtE,KADb,CACRsE,YADQ;AAAA;AAAA;AAAA,qBAGYvK,OAAO,CAAC0G,GAAR,CACnB6D,YAAY,CAACtH,GAAb;AAAA,qFAAiB,iBAAM4H,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAET,OAAOA,WAAP,KAAuB,QAFd;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAGIzL,iBAAiB,CAACyL,WAAD,CAHrB;;AAAA;AAGT/L,0BAAAA,IAHS;AAAA;AAAA;;AAAA;AAKTA,0BAAAA,IAAI,GAAG+L,WAAP;;AALS;AAAA;AAAA,iCAOM9K,QAAQ,CAACjB,IAAD,CAPd;;AAAA;AAOPW,0BAAAA,IAPO;AAAA,2DASN;AACHX,4BAAAA,IAAI,EAAJA,IADG;AAEHW,4BAAAA,IAAI,EAAJA;AAFG,2BATM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;;AAAA;AAAA;AAAA;AAAA,kBADmB,CAHZ;;AAAA;AAGLkH,cAAAA,QAHK;;AAoBX,oBAAKH,QAAL,CAAc,UAACd,KAAD;AAAA,uBAAY;AACtBpD,kBAAAA,WAAW,EAAE,GAAGwI,MAAH,CACTpF,KAAK,CAACpD,WADG,EAETqE,QAFS;AADS,iBAAZ;AAAA,eAAd,EAKI,MAAKgE,gBALT;;AApBW;AAAA;;AAAA;AAAA;AAAA;AA2BXI,cAAAA,OAAO,CAACC,GAAR;;AA3BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;UA+BnBC;2EAAW,kBAAMC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACAhF,gBAAAA,UADA,GACc,MAAKD,KADnB,CACAC,UADA;;AAGP,sBAAKM,QAAL,CAAc,UAACd,KAAD,EAAW;AACrB;AACA,sBAAIQ,UAAU,IAAI,CAAlB,EAAqB;AACjB,2BAAO;AACH5D,sBAAAA,WAAW,EAAE,GAAGwI,MAAH,CAAUI,cAAc,CAAC,CAAD,CAAxB;AADV,qBAAP;AAGH,mBANoB;;;AASrB,yBAAO;AACH5I,oBAAAA,WAAW,EAAE,GAAGwI,MAAH,CACTpF,KAAK,CAACpD,WADG,EAET4I,cAFS;AADV,mBAAP;AAMH,iBAfD,EAeG,MAAKP,gBAfR;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;UAqBXQ,aAAa,UAACxD,cAAD,EAAiByD,iBAAjB,EAAuC;AAChD9K,MAAAA,KAAK,CAACkH,eAAN;AADgD,UAGzCE,QAHyC,GAG7B,MAAKzB,KAHwB,CAGzCyB,QAHyC;AAAA,UAIzCpF,WAJyC,GAI1B,MAAKoD,KAJqB,CAIzCpD,WAJyC;;AAOhD,UAAM+I,iBAAiB,GAAG/I,WAAW,CAACgJ,MAAZ,CAAmB,UAACpI,UAAD,EAAaC,CAAb,EAAmB;AAC5D,eAAOA,CAAC,KAAKiI,iBAAb;AACH,OAFyB,CAA1B,CAPgD;;AAYhD,UAAI1D,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACC,cAAc,CAAC7I,IAAhB,CAAR;AACH,OAd+C;;;AAiBhD,YAAK0H,QAAL,CAAc;AACVlE,QAAAA,WAAW,EAAE+I;AADH,OAAd,EAEG,MAAKV,gBAFR;AAGH;;;;;;;wCA/FmB;AAChB,WAAKC,gBAAL;AACH;;;2CAEsB;AAAA,UACZN,cADY,GACM,KAAKrE,KADX,CACZqE,cADY;;AAGnB,UAAIA,cAAJ,EAAoB;AAChB,aAAK9D,QAAL,CAAc;AACVlE,UAAAA,WAAW,EAAE;AADH,SAAd,EAEG,KAAKqI,gBAFR;AAGH;AACJ;;;6BAqFQ;AAAA,kCACyBN,sBAAsB,CAAC,KAAKpE,KAAN,CAD/C;AAAA;AAAA,UACIwE,iBADJ;;AAAA,UAEEnI,WAFF,GAEiB,KAAKoD,KAFtB,CAEEpD,WAFF;AAIL,0BACIF,oBAACqD,kBAAD,eACQgF,iBADR;AAEI,QAAA,WAAW,EAAEnI,WAFjB;AAGI,QAAA,KAAK,EAAE,KAAK2I,QAHhB;AAII,QAAA,QAAQ,EAAE,KAAKE;AAJnB,SADJ;AAQH;;;;EAlHsB1B;;AAqH3BiB,YAAY,CAAChB,YAAb,GAA4B;AACxBY,EAAAA,cAAc,EAAE,IADQ;AAExBpE,EAAAA,UAAU,EAAE,CAFY;AAGxBqE,EAAAA,YAAY,EAAE;AAHU,CAA5B;AAMA,wCAAAG,YAAY,CAACpH,SAAb,gBACOmC,kBAAgB,CAACnC,SADxB;AAEI;AACAgH,EAAAA,cAAc,EAAE/G,SAAS,CAACK,IAH9B;;AAII;;;AAGA2G,EAAAA,YAAY,EAAEhH,SAAS,CAACG,OAAV,CACVH,SAAS,CAAC4G,SAAV,CAAoB,CAChB5G,SAAS,CAACyG,MADM,EAEhBzG,SAAS,CAACwG,GAFM,CAApB,CADU,CAPlB;;AAaI;AACA7D,EAAAA,UAAU,EAAE3C,SAAS,CAAC0G,MAd1B;;AAeI;;;;;AAKAO,EAAAA,QAAQ,EAAEjH,SAAS,CAACI,IApBxB;;AAqBI;;;;;AAKA+D,EAAAA,QAAQ,EAAEnE,SAAS,CAACI;AA1BxB;;;;;;ACnIA,SAAS4H,wBAAT,CAAkCC,QAAlC,EAA4C;AAAA,MAEpCC,gBAFoC,GAYpCD,QAZoC,CAEpCC,gBAFoC;AAAA,MAGpCC,WAHoC,GAYpCF,QAZoC,CAGpCE,WAHoC;AAAA,MAIpCC,WAJoC,GAYpCH,QAZoC,CAIpCG,WAJoC;AAAA,MAKpCC,SALoC,GAYpCJ,QAZoC,CAKpCI,SALoC;AAAA,MAMpCnK,QANoC,GAYpC+J,QAZoC,CAMpC/J,QANoC;AAAA,MAOpCoK,OAPoC,GAYpCL,QAZoC,CAOpCK,OAPoC;AAAA,MAQpCC,MARoC,GAYpCN,QAZoC,CAQpCM,MARoC;AAAA,MASpCC,IAToC,GAYpCP,QAZoC,CASpCO,IAToC;AAAA,MAUpCC,gBAVoC,GAYpCR,QAZoC,CAUpCQ,gBAVoC;AAAA,MAWjCvB,iBAXiC,4BAYpCe,QAZoC;;AAcxC,SAAO,CACH;AACIC,IAAAA,gBAAgB,EAAhBA,gBADJ;AAEIC,IAAAA,WAAW,EAAXA,WAFJ;AAGIC,IAAAA,WAAW,EAAXA,WAHJ;AAIIC,IAAAA,SAAS,EAATA,SAJJ;AAKInK,IAAAA,QAAQ,EAARA,QALJ;AAMIoK,IAAAA,OAAO,EAAPA,OANJ;AAOIC,IAAAA,MAAM,EAANA,MAPJ;AAQIC,IAAAA,IAAI,EAAJA,IARJ;AASIC,IAAAA,gBAAgB,EAAhBA;AATJ,GADG,EAYHvB,iBAZG,CAAP;AAcH;AAED;;;;;;;IAKMwB;;;;;;;;;;;;;6BACO;AAAA,kCAC4CV,wBAAwB,CAAC,KAAKtF,KAAN,CADpE;AAAA;AAAA,UACEiG,mBADF;AAAA,UACuBzB,iBADvB;;AAAA,UAGDgB,gBAHC,GAYDS,mBAZC,CAGDT,gBAHC;AAAA,UAIDC,WAJC,GAYDQ,mBAZC,CAIDR,WAJC;AAAA,UAKDC,WALC,GAYDO,mBAZC,CAKDP,WALC;AAAA,UAMDC,SANC,GAYDM,mBAZC,CAMDN,SANC;AAAA,UAODnK,QAPC,GAYDyK,mBAZC,CAODzK,QAPC;AAAA,UAQDoK,OARC,GAYDK,mBAZC,CAQDL,OARC;AAAA,UASDC,MATC,GAYDI,mBAZC,CASDJ,MATC;AAAA,UAUDC,IAVC,GAYDG,mBAZC,CAUDH,IAVC;AAAA,UAWDC,gBAXC,GAYDE,mBAZC,CAWDF,gBAXC;;AAeL,UAAMG,cAAc,GAAG1B,iBAAiB,CAACnI,WAAlB,CAA8BiE,MAA9B,KAAyC,CAAhE;AAEA,0BACInE,oBAAC,MAAD,eACQsJ,WADR;AAEI,QAAA,SAAS,EAAEE,SAFf;AAGI,QAAA,QAAQ,EAAEnK,QAHd;AAII,QAAA,OAAO,EAAEoK,OAJb;AAKI,QAAA,IAAI,EAAEE;AALV,uBAOI3J,oBAAC,WAAD,QAAcuJ,WAAd,CAPJ,eASIvJ,oBAAC,aAAD,qBACIA,oBAACqD,kBAAD,EACQgF,iBADR,CADJ,CATJ,eAeIrI,oBAAC,aAAD,qBACIA,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,OAAO,EAAEyJ;AAFb,SAIKJ,gBAJL,CADJ,eAQIrJ,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,QAAQ,EAAE+J,cAFd;AAGI,QAAA,OAAO,EAAEL;AAHb,SAKKE,gBALL,CARJ,CAfJ,CADJ;AAkCH;;;;EApD4BvC;;AAuDjCwC,kBAAkB,CAACvC,YAAnB,GAAkC;AAC9BqC,EAAAA,IAAI,EAAE,KADwB;AAE9BJ,EAAAA,WAAW,EAAE,aAFiB;AAG9BD,EAAAA,WAAW,EAAE,EAHiB;AAI9BE,EAAAA,SAAS,EAAE,IAJmB;AAK9BnK,EAAAA,QAAQ,EAAE,IALoB;AAM9BgK,EAAAA,gBAAgB,EAAE,QANY;AAO9BO,EAAAA,gBAAgB,EAAE,QAPY;AAQ9BvD,EAAAA,YAAY,EAAE,IARgB;AAS9BC,EAAAA,sBAAsB,EAAE,KATM;AAU9BF,EAAAA,sBAAsB,EAAE;AAVM,CAAlC;AAaA,wCAAAyD,kBAAkB,CAAC3I,SAAnB,gBACOmC,kBAAgB,CAACnC,SADxB;AAEI;AACAyI,EAAAA,IAAI,EAAExI,SAAS,CAACK,IAHpB;;AAII;AACA+H,EAAAA,WAAW,EAAEpI,SAAS,CAAC4G,SAAV,CAAoB,CAC7B5G,SAAS,CAACyG,MADmB,EAE7BzG,SAAS,CAAC6I,OAFmB,CAApB,CALjB;;AASI;;;;AAIAV,EAAAA,WAAW,EAAEnI,SAAS,CAACC,MAb3B;;AAcI;;;;AAIAoI,EAAAA,SAAS,EAAErI,SAAS,CAACK,IAlBzB;;AAmBI;;;;AAIAnC,EAAAA,QAAQ,EAAE8B,SAAS,CAACyG,MAvBxB;;AAwBI;AACAyB,EAAAA,gBAAgB,EAAElI,SAAS,CAACyG,MAzBhC;;AA0BI;AACAgC,EAAAA,gBAAgB,EAAEzI,SAAS,CAACyG,MA3BhC;;AA4BI;;;;;AAKA6B,EAAAA,OAAO,EAAEtI,SAAS,CAACI,IAjCvB;;AAkCI;;;;;AAKAmI,EAAAA,MAAM,EAAEvI,SAAS,CAACI,IAvCtB;;AAwCI;;;;AAIA8E,EAAAA,YAAY,EAAElF,SAAS,CAACK,IA5C5B;;AA6CI;AACA8E,EAAAA,sBAAsB,EAAEnF,SAAS,CAACK,IA9CtC;;AA+CI;AACA4E,EAAAA,sBAAsB,EAAEjF,SAAS,CAACK;AAhDtC;;;;;AC1GA;;;;;;;;IAOMyI;;;;;;;;;;;;;;;UACF3G,QAAQ;AACJpD,MAAAA,WAAW,EAAE;AADT;;UAkBRqI,mBAAmB,YAAM;AAAA,UACdH,QADc,GACF,MAAKvE,KADH,CACduE,QADc;AAAA,UAEdlI,WAFc,GAEC,MAAKoD,KAFN,CAEdpD,WAFc;;AAIrB,UAAIkI,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAAClI,WAAW,CAACW,GAAZ,CAAgB,UAACC,UAAD;AAAA,iBAAgBA,UAAU,CAACpE,IAA3B;AAAA,SAAhB,CAAD,CAAR;AACH;AACJ;;UAED8L,yFAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRL,cAAAA,YADQ,GACQ,MAAKtE,KADb,CACRsE,YADQ;AAAA;AAAA;AAAA,qBAGYvK,OAAO,CAAC0G,GAAR,CACnB6D,YAAY,CAACtH,GAAb;AAAA,qFAAiB,iBAAM4H,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAET,OAAOA,WAAP,KAAuB,QAFd;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAGIzL,iBAAiB,CAACyL,WAAD,CAHrB;;AAAA;AAGT/L,0BAAAA,IAHS;AAAA;AAAA;;AAAA;AAKTA,0BAAAA,IAAI,GAAG+L,WAAP;;AALS;AAAA;AAAA,iCAOM9K,QAAQ,CAACjB,IAAD,CAPd;;AAAA;AAOPW,0BAAAA,IAPO;AAAA,2DASN;AACHX,4BAAAA,IAAI,EAAJA,IADG;AAEHW,4BAAAA,IAAI,EAAJA;AAFG,2BATM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;;AAAA;AAAA;AAAA;AAAA,kBADmB,CAHZ;;AAAA;AAGLkH,cAAAA,QAHK;;AAoBX,oBAAKH,QAAL,CAAc,UAACd,KAAD;AAAA,uBAAY;AACtBpD,kBAAAA,WAAW,EAAE,GAAGwI,MAAH,CACTpF,KAAK,CAACpD,WADG,EAETqE,QAFS;AADS,iBAAZ;AAAA,eAAd,EAKI,MAAKgE,gBALT;;AApBW;AAAA;;AAAA;AAAA;AAAA;AA2BXI,cAAAA,OAAO,CAACC,GAAR;;AA3BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;UA+BnBC;2EAAW,kBAAMC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACAhF,gBAAAA,UADA,GACc,MAAKD,KADnB,CACAC,UADA;;AAGP,sBAAKM,QAAL,CAAc,UAACd,KAAD,EAAW;AACrB;AACA,sBAAIQ,UAAU,IAAI,CAAlB,EAAqB;AACjB,2BAAO;AACH5D,sBAAAA,WAAW,EAAE,GAAGwI,MAAH,CAAUI,cAAc,CAAC,CAAD,CAAxB;AADV,qBAAP;AAGH,mBANoB;;;AASrB,yBAAO;AACH5I,oBAAAA,WAAW,EAAE,GAAGwI,MAAH,CACTpF,KAAK,CAACpD,WADG,EAET4I,cAFS;AADV,mBAAP;AAMH,iBAfD,EAeG,MAAKP,gBAfR;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;UAqBXQ,aAAa,UAACxD,cAAD,EAAiByD,iBAAjB,EAAuC;AAChD9K,MAAAA,KAAK,CAACkH,eAAN;AADgD,UAGzCE,QAHyC,GAG7B,MAAKzB,KAHwB,CAGzCyB,QAHyC;AAAA,UAIzCpF,WAJyC,GAI1B,MAAKoD,KAJqB,CAIzCpD,WAJyC;;AAOhD,UAAM+I,iBAAiB,GAAG/I,WAAW,CAACgJ,MAAZ,CAAmB,UAACpI,UAAD,EAAaC,CAAb,EAAmB;AAC5D,eAAOA,CAAC,KAAKiI,iBAAb;AACH,OAFyB,CAA1B,CAPgD;;AAYhD,UAAI1D,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACC,cAAc,CAAC7I,IAAhB,CAAR;AACH,OAd+C;;;AAiBhD,YAAK0H,QAAL,CAAc;AACVlE,QAAAA,WAAW,EAAE+I;AADH,OAAd,EAEG,MAAKV,gBAFR;AAGH;;UAED2B,cAAc,UAACtG,GAAD,EAAS;AAAA,wBACe,MAAKC,KADpB;AAAA,UACZqE,cADY,eACZA,cADY;AAAA,UACIuB,OADJ,eACIA,OADJ;;AAGnB,UAAIA,OAAJ,EAAa;AACTA,QAAAA,OAAO,CAAC7F,GAAD,CAAP;AACH;;AAED,UAAIsE,cAAJ,EAAoB;AAChB,cAAK9D,QAAL,CAAc;AACVlE,UAAAA,WAAW,EAAE;AADH,SAAd,EAEG,MAAKqI,gBAFR;AAGH;AACJ;;UAED4B,aAAa,UAACvG,GAAD,EAAS;AAAA,yBACe,MAAKC,KADpB;AAAA,UACXqE,cADW,gBACXA,cADW;AAAA,UACKwB,MADL,gBACKA,MADL;AAAA,UAEXxJ,WAFW,GAEI,MAAKoD,KAFT,CAEXpD,WAFW;;AAIlB,UAAIwJ,MAAJ,EAAY;AACRA,QAAAA,MAAM,CAACxJ,WAAW,CAACW,GAAZ,CAAgB,UAACC,UAAD;AAAA,iBAAgBA,UAAU,CAACpE,IAA3B;AAAA,SAAhB,CAAD,EAAmDkH,GAAnD,CAAN;AACH;;AAED,UAAIsE,cAAJ,EAAoB;AAChB,cAAK9D,QAAL,CAAc;AACVlE,UAAAA,WAAW,EAAE;AADH,SAAd,EAEG,MAAKqI,gBAFR;AAGH;AACJ;;;;;;;wCA5HmB;AAChB,WAAKC,gBAAL;AACH;;;2CAEsB;AAAA,UACZN,cADY,GACM,KAAKrE,KADX,CACZqE,cADY;;AAGnB,UAAIA,cAAJ,EAAoB;AAChB,aAAK9D,QAAL,CAAc;AACVlE,UAAAA,WAAW,EAAE;AADH,SAAd,EAEG,KAAKqI,gBAFR;AAGH;AACJ;;;6BAkHQ;AAAA,UACErI,WADF,GACiB,KAAKoD,KADtB,CACEpD,WADF;AAGL,0BACIF,oBAAC,kBAAD,eACQ,KAAK6D,KADb;AAEI,QAAA,WAAW,EAAE3D,WAFjB;AAGI,QAAA,KAAK,EAAE,KAAK2I,QAHhB;AAII,QAAA,QAAQ,EAAE,KAAKE,UAJnB;AAKI,QAAA,OAAO,EAAE,KAAKmB,WALlB;AAMI,QAAA,MAAM,EAAE,KAAKC;AANjB,SADJ;AAUH;;;;EAhJwB9C;;AAmJ7B4C,cAAc,CAAC3C,YAAf,GAA8B;AAC1BY,EAAAA,cAAc,EAAE,IADU;AAE1BpE,EAAAA,UAAU,EAAE,CAFc;AAG1BqE,EAAAA,YAAY,EAAE;AAHY,CAA9B;AAMA,wCAAA8B,cAAc,CAAC/I,SAAf,gBACO2I,kBAAkB,CAAC3I,SAD1B;AAEI;AACAgH,EAAAA,cAAc,EAAE/G,SAAS,CAACK,IAH9B;;AAII;AACAsC,EAAAA,UAAU,EAAE3C,SAAS,CAAC0G,MAL1B;;AAMI;;;AAGAM,EAAAA,YAAY,EAAEhH,SAAS,CAACG,OAAV,CACVH,SAAS,CAAC4G,SAAV,CAAoB,CAChB5G,SAAS,CAACyG,MADM,EAEhBzG,SAAS,CAACwG,GAFM,CAApB,CADU,CATlB;;AAeI;;;;;;AAMA+B,EAAAA,MAAM,EAAEvI,SAAS,CAACI;AArBtB;;;;;;;"}