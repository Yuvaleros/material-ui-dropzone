{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    if (filesize >= 1048576) {\n        size = (filesize / 1048576) + ' megabytes';\n    } else if (filesize >= 1024) {\n        size = (filesize / 1024) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import Chip from '@material-ui/core/Chip';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = ({palette, shape, spacing}) => ({\n    root: {},\n    imageContainer: {\n        position: 'relative',\n        zIndex: 10,\n        textAlign: 'center',\n        '&:hover $image': {\n            opacity: 0.3,\n        },\n        '&:hover $removeButton': {\n            opacity: 1,\n        },\n    },\n    image: {\n        height: 100,\n        width: 'initial',\n        maxWidth: '100%',\n        color: palette.text.primary,\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n        boxSizing: 'border-box',\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\n        borderRadius: shape.borderRadius,\n        zIndex: 5,\n        opacity: 1,\n    },\n    removeButton: {\n        transition: '.5s ease',\n        position: 'absolute',\n        opacity: 0,\n        top: spacing(-1),\n        right: spacing(-1),\n        width: 40,\n        height: 40,\n        '&:focus': {\n            opacity: 1,\n        },\n    },\n});\n\nfunction PreviewList({\n    fileObjects,\n    handleRemove,\n    showFileNames,\n    useChipsForPreview,\n    previewChipProps,\n    previewGridClasses,\n    previewGridProps,\n    handlePreviewChipClick,\n    classes,\n    getPreviewIcon,\n}) {\n    if (useChipsForPreview) {\n        return (\n            <Grid\n                spacing={1}\n                direction=\"row\"\n                {...previewGridProps.container}\n                container={true}\n                className={clsx(classes.root, previewGridClasses.container)}\n            >\n                {fileObjects.map((fileObject, i) => {\n                    return (\n                        <Grid\n                            {...previewGridProps.item}\n                            item={true}\n                            key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                            className={classes.imageContainer}\n                        >\n                            <Chip\n                                variant=\"outlined\"\n                                {...previewChipProps}\n                                onClick={handlePreviewChipClick(i)}\n                                label={fileObject.file.name}\n                                onDelete={handleRemove(i)}\n                            />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n\n    return (\n        <Grid\n            spacing={8}\n            {...previewGridProps.container}\n            container={true}\n            className={clsx(classes.root, previewGridClasses.container)}\n        >\n            {fileObjects.map((fileObject, i) => {\n                return (\n                    <Grid\n                        xs={4}\n                        {...previewGridProps.item}\n                        item={true}\n                        key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                        className={clsx(classes.imageContainer, previewGridClasses.item)}\n                    >\n                        {getPreviewIcon(fileObject, classes)}\n\n                        {showFileNames && (\n                            <Typography variant=\"body1\" component=\"p\">\n                                {fileObject.file.name}\n                            </Typography>\n                        )}\n\n                        <Fab\n                            onClick={handleRemove(i)}\n                            aria-label=\"Delete\"\n                            className={classes.removeButton}\n                        >\n                            <DeleteIcon />\n                        </Fab>\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n}\n\nPreviewList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n    getPreviewIcon: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    previewChipProps: PropTypes.object,\n    previewGridClasses: PropTypes.object,\n    previewGridProps: PropTypes.object,\n    handlePreviewChipClick: PropTypes.func,\n    showFileNames: PropTypes.bool,\n    useChipsForPreview: PropTypes.bool,\n};\n\nexport default withStyles(styles, {name: 'MuiDropzonePreviewList'})(PreviewList);\n","import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport {withStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    successAlert: {\n        backgroundColor: theme.palette.success.main,\n    },\n    errorAlert: {\n        backgroundColor: theme.palette.error.main,\n    },\n    infoAlert: {\n        backgroundColor: theme.palette.info.main,\n    },\n    warningAlert: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n        '& > svg': {\n            marginRight: theme.spacing(1),\n        },\n    },\n    icon: {\n        fontSize: 20,\n        opacity: 0.9,\n    },\n    closeButton: {},\n});\n\nfunction SnackbarContentWrapper(props) {\n    const {classes, className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[`${variant}Alert`], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={classes.icon} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles, {name: 'MuiDropzoneSnackbar'})(SnackbarContentWrapper);\n","import Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Fragment } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { convertBytesToMbsOrKbs, isImage, readFile } from '../helpers';\nimport PreviewList from './PreviewList';\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\n\nconst styles = ({ palette, shape, spacing }) => ({\n  '@keyframes progress': {\n    '0%': {\n      backgroundPosition: '0 0',\n    },\n    '100%': {\n      backgroundPosition: '-70px 0',\n    },\n  },\n  root: {\n    position: 'relative',\n    width: '100%',\n    minHeight: '250px',\n    backgroundColor: palette.background.paper,\n    border: 'dashed',\n    borderColor: palette.divider,\n    borderRadius: shape.borderRadius,\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    overflow: 'hidden',\n  },\n  active: {\n    animation: '$progress 2s linear infinite !important',\n    // eslint-disable-next-line max-len\n    backgroundImage: `repeating-linear-gradient(-45deg, ${palette.background.paper}, ${palette.background.paper} 25px, ${palette.divider} 25px, ${palette.divider} 50px)`,\n    backgroundSize: '150% 100%',\n    border: 'solid',\n    borderColor: palette.primary.light,\n  },\n  invalid: {\n    // eslint-disable-next-line max-len\n    backgroundImage: `repeating-linear-gradient(-45deg, ${palette.error.light}, ${palette.error.light} 25px, ${palette.error.dark} 25px, ${palette.error.dark} 50px)`,\n    borderColor: palette.error.main,\n  },\n  textContainer: {\n    textAlign: 'center',\n  },\n  text: {\n    marginBottom: spacing(3),\n    marginTop: spacing(3),\n  },\n  icon: {\n    width: 51,\n    height: 51,\n    color: palette.text.primary,\n  },\n});\n\nconst defaultSnackbarAnchorOrigin = {\n  horizontal: 'left',\n  vertical: 'bottom',\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes) => {\n  if (isImage(fileObject.file)) {\n    return (\n      <img\n        className={classes.image}\n        role=\"presentation\"\n        src={fileObject.data}\n      />\n    );\n  }\n\n  return <AttachFileIcon className={classes.image} />;\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nclass DropzoneAreaBase extends React.PureComponent {\n  state = {\n    openSnackBar: false,\n    snackbarMessage: '',\n    snackbarVariant: 'success',\n  };\n\n  notifyAlert() {\n    const { onAlert } = this.props;\n    const { openSnackBar, snackbarMessage, snackbarVariant } = this.state;\n    if (openSnackBar && onAlert) {\n      onAlert(snackbarMessage, snackbarVariant);\n    }\n  }\n\n  handleDropAccepted = async (acceptedFiles, evt) => {\n    const {\n      fileObjects,\n      filesLimit,\n      getFileAddedMessage,\n      getFileLimitExceedMessage,\n      onAdd,\n      onDrop,\n    } = this.props;\n\n    if (\n      filesLimit > 1 &&\n      fileObjects.length + acceptedFiles.length > filesLimit\n    ) {\n      this.setState(\n        {\n          openSnackBar: true,\n          snackbarMessage: getFileLimitExceedMessage(filesLimit),\n          snackbarVariant: 'error',\n        },\n        this.notifyAlert\n      );\n      return;\n    }\n\n    // Notify Drop event\n    if (onDrop) {\n      onDrop(acceptedFiles, evt);\n    }\n\n    // Retrieve fileObjects data\n    const fileObjs = await Promise.all(\n      acceptedFiles.map(async (file) => {\n        const data = await readFile(file);\n        return {\n          file,\n          data,\n        };\n      })\n    );\n\n    // Notify added files\n    if (onAdd) {\n      onAdd(fileObjs);\n    }\n\n    // Display message\n    const message = fileObjs.reduce(\n      (msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name),\n      ''\n    );\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: message,\n        snackbarVariant: 'success',\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleDropRejected = (rejectedFiles, evt) => {\n    const {\n      acceptedFiles,\n      filesLimit,\n      fileObjects,\n      getDropRejectMessage,\n      getFileLimitExceedMessage,\n      maxFileSize,\n      onDropRejected,\n    } = this.props;\n\n    let message = '';\n    if (fileObjects.length + rejectedFiles.length > filesLimit) {\n      message = getFileLimitExceedMessage(filesLimit);\n    } else {\n      rejectedFiles.forEach((rejectedFile) => {\n        message = getDropRejectMessage(\n          rejectedFile,\n          acceptedFiles,\n          maxFileSize\n        );\n      });\n    }\n\n    if (onDropRejected) {\n      onDropRejected(rejectedFiles, evt);\n    }\n\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: message,\n        snackbarVariant: 'error',\n      },\n      this.notifyAlert\n    );\n  };\n\n  handlePreviewChipClick = (fileIndex) => (event) => {\n    event.stopPropagation();\n\n    const { fileObjects, onPreviewChipClick } = this.props;\n\n    // Find clicked fileObject\n    const clickedObject = fileObjects[fileIndex];\n\n    if (onPreviewChipClick) {\n      onPreviewChipClick(clickedObject, fileIndex);\n    }\n  };\n\n  handleRemove = (fileIndex) => (event) => {\n    event.stopPropagation();\n\n    const { fileObjects, getFileRemovedMessage, onDelete } = this.props;\n\n    // Find removed fileObject\n    const removedFileObj = fileObjects[fileIndex];\n\n    // Notify removed file\n    if (onDelete) {\n      onDelete(removedFileObj, fileIndex);\n    }\n\n    this.setState(\n      {\n        openSnackBar: true,\n        snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n        snackbarVariant: 'info',\n      },\n      this.notifyAlert\n    );\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      openSnackBar: false,\n    });\n  };\n\n  render() {\n    const {\n      acceptedFiles,\n      alertSnackbarProps,\n      classes,\n      disableRejectionFeedback,\n      dropzoneClass,\n      dropzoneParagraphClass,\n      dropzoneProps,\n      dropzoneText,\n      fileObjects,\n      filesLimit,\n      getPreviewIcon,\n      Icon,\n      inputProps,\n      maxFileSize,\n      previewChipProps,\n      previewGridClasses,\n      previewGridProps,\n      previewText,\n      showAlerts,\n      showFileNames,\n      showFileNamesInPreview,\n      showPreviews,\n      showPreviewsInDropzone,\n      useChipsForPreview,\n    } = this.props;\n    const { openSnackBar, snackbarMessage, snackbarVariant } = this.state;\n\n    const acceptFiles = acceptedFiles?.join(',');\n    const isMultiple = filesLimit > 1;\n    const previewsVisible = showPreviews && fileObjects.length > 0;\n    const previewsInDropzoneVisible =\n      showPreviewsInDropzone && fileObjects.length > 0;\n\n    return (\n      <Fragment>\n        <Dropzone\n          {...dropzoneProps}\n          accept={acceptFiles}\n          onDropAccepted={this.handleDropAccepted}\n          onDropRejected={this.handleDropRejected}\n          maxSize={maxFileSize}\n          multiple={isMultiple}\n        >\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <div\n              {...getRootProps({\n                className: clsx(\n                  classes.root,\n                  dropzoneClass,\n                  isDragActive && classes.active,\n                  !disableRejectionFeedback && isDragReject && classes.invalid\n                ),\n              })}\n            >\n              <input {...getInputProps(inputProps)} />\n\n              <div className={classes.textContainer}>\n                <Typography\n                  variant=\"h5\"\n                  component=\"p\"\n                  className={clsx(classes.text, dropzoneParagraphClass)}\n                >\n                  {dropzoneText}\n                </Typography>\n                {Icon ? (\n                  <Icon className={classes.icon} />\n                ) : (\n                  <CloudUploadIcon className={classes.icon} />\n                )}\n              </div>\n\n              {previewsInDropzoneVisible && (\n                <PreviewList\n                  fileObjects={fileObjects}\n                  handleRemove={this.handleRemove}\n                  handlePreviewChipClick={this.handlePreviewChipClick}\n                  getPreviewIcon={getPreviewIcon}\n                  showFileNames={showFileNames}\n                  useChipsForPreview={useChipsForPreview}\n                  previewChipProps={previewChipProps}\n                  previewGridClasses={previewGridClasses}\n                  previewGridProps={previewGridProps}\n                />\n              )}\n            </div>\n          )}\n        </Dropzone>\n\n        {previewsVisible && (\n          <Fragment>\n            <Typography variant=\"subtitle1\" component=\"span\">\n              {previewText}\n            </Typography>\n\n            <PreviewList\n              fileObjects={fileObjects}\n              handleRemove={this.handleRemove}\n              handlePreviewChipClick={this.handlePreviewChipClick}\n              getPreviewIcon={getPreviewIcon}\n              showFileNames={showFileNamesInPreview}\n              useChipsForPreview={useChipsForPreview}\n              previewChipProps={previewChipProps}\n              previewGridClasses={previewGridClasses}\n              previewGridProps={previewGridProps}\n            />\n          </Fragment>\n        )}\n\n        {((typeof showAlerts === 'boolean' && showAlerts) ||\n          (Array.isArray(showAlerts) &&\n            showAlerts.includes(snackbarVariant))) && (\n          <Snackbar\n            anchorOrigin={defaultSnackbarAnchorOrigin}\n            autoHideDuration={6000}\n            {...alertSnackbarProps}\n            open={openSnackBar}\n            onClose={this.handleCloseSnackbar}\n          >\n            <SnackbarContentWrapper\n              onClose={this.handleCloseSnackbar}\n              variant={snackbarVariant}\n              message={snackbarMessage}\n            />\n          </Snackbar>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nDropzoneAreaBase.defaultProps = {\n  acceptedFiles: [],\n  filesLimit: 3,\n  fileObjects: [],\n  maxFileSize: 3000000,\n  dropzoneText: 'Drag and drop a file here or click',\n  previewText: 'Preview:',\n  disableRejectionFeedback: false,\n  showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\n  showPreviewsInDropzone: true,\n  showFileNames: false,\n  showFileNamesInPreview: false,\n  useChipsForPreview: false,\n  previewChipProps: {},\n  previewGridClasses: {},\n  previewGridProps: {},\n  showAlerts: true,\n  alertSnackbarProps: {\n    anchorOrigin: {\n      horizontal: 'left',\n      vertical: 'bottom',\n    },\n    autoHideDuration: 6000,\n  },\n  getFileLimitExceedMessage: (filesLimit) =>\n    `Maximum allowed number of files exceeded. Only ${filesLimit} allowed`,\n  getFileAddedMessage: (fileName) => `File ${fileName} successfully added.`,\n  getPreviewIcon: defaultGetPreviewIcon,\n  getFileRemovedMessage: (fileName) => `File ${fileName} removed.`,\n  getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n    let message = `File ${rejectedFile.name} was rejected. `;\n    if (!acceptedFiles.includes(rejectedFile.type)) {\n      message += 'File type not supported. ';\n    }\n    if (rejectedFile.size > maxFileSize) {\n      message +=\n        'File is too big. Size limit is ' +\n        convertBytesToMbsOrKbs(maxFileSize) +\n        '. ';\n    }\n    return message;\n  },\n};\n\nexport const FileObjectShape = PropTypes.shape({\n  file: PropTypes.object,\n  data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** A list of file types to accept.\n   * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n   */\n  acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n  /** Icon to be displayed inside the dropzone area. */\n  Icon: PropTypes.elementType,\n  /** Currently loaded files. */\n  fileObjects: PropTypes.arrayOf(FileObjectShape),\n  /** Maximum file size (in bytes) that the dropzone will accept. */\n  maxFileSize: PropTypes.number,\n  /** Text inside the dropzone. */\n  dropzoneText: PropTypes.string,\n  /** Custom CSS class name for dropzone container. */\n  dropzoneClass: PropTypes.string,\n  /** Custom CSS class name for text inside the container. */\n  dropzoneParagraphClass: PropTypes.string,\n  /** Disable feedback effect when dropping rejected files. */\n  disableRejectionFeedback: PropTypes.bool,\n  /** Shows previews **BELOW** the dropzone. */\n  showPreviews: PropTypes.bool,\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n  /** Shows file name under the dropzone image. */\n  showFileNames: PropTypes.bool,\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool,\n  /** Uses deletable Material-UI Chip components to display file names. */\n  useChipsForPreview: PropTypes.bool,\n  /**\n   * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n   *\n   * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n   */\n  previewChipProps: PropTypes.object,\n  /**\n   * Custom CSS classNames for preview Grid components.<br/>\n   * Should be in the form {container: string, item: string, image: string}.\n   */\n  previewGridClasses: PropTypes.object,\n  /**\n   * Props to pass to the Material-UI Grid components.<br/>\n   * Should be in the form {container: GridProps, item: GridProps}.\n   *\n   * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n   */\n  previewGridProps: PropTypes.object,\n  /** The label for the file preview section. */\n  previewText: PropTypes.string,\n  /**\n   * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n   *\n   * - can be a boolean (\"global\" `true` or `false` for all alerts).\n   * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n   *  - showAlerts={['error']} for only errors.\n   *  - showAlerts={['error', 'info']} for both errors and info.\n   *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n   *  - showAlerts={[]} is same as showAlerts={false}.\n   */\n  showAlerts: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\n  ]),\n  /**\n   * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n   *\n   * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n   */\n  alertSnackbarProps: PropTypes.object,\n  /**\n   * Props to pass to the Dropzone component.\n   *\n   * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n   */\n  dropzoneProps: PropTypes.object,\n  /**\n   * Attributes applied to the input element.\n   *\n   * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Get alert message to display when files limit is exceed.\n   *\n   * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n   *\n   * @param {number} filesLimit The `filesLimit` currently set for the component.\n   */\n  getFileLimitExceedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a new file is added.\n   *\n   * *Default*: \"File ${fileName} successfully added.\"\n   *\n   * @param {string} fileName The newly added file name.\n   */\n  getFileAddedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is removed.\n   *\n   * *Default*: \"File ${fileName} removed.\"\n   *\n   * @param {string} fileName The name of the removed file.\n   */\n  getFileRemovedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is rejected onDrop.\n   *\n   * *Default*: \"File ${rejectedFile.name} was rejected.\"\n   *\n   * @param {Object} rejectedFile The file that got rejected\n   * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n   * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n   */\n  getDropRejectMessage: PropTypes.func,\n  /**\n   * A function which determines which icon to display for a file preview.\n   *\n   * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n   *\n   * @param {FileObject} objectFile The file which the preview will belong to\n   * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n   */\n  getPreviewIcon: PropTypes.func,\n  /**\n   * Fired when new files are added to dropzone.\n   *\n   * @param {FileObject[]} newFiles The new files added to the dropzone.\n   */\n  onAdd: PropTypes.func,\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {FileObject} deletedFileObject The file that was removed.\n   * @param {number} index The index of the removed file object.\n   */\n  onDelete: PropTypes.func,\n  /**\n   *\n   * @param {FileObject} clickedFileObject The file that was clicked.\n   * @param {number} index The index of the clicked file object.\n   */\n  onPreviewChipClick: PropTypes.func,\n  /**\n   * Fired when the user drops files into the dropzone.\n   *\n   * @param {File[]} droppedFiles All the files dropped into the dropzone.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDrop: PropTypes.func,\n  /**\n   * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n   *\n   * @param {File[]} rejectedFiles All the rejected files.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDropRejected: PropTypes.func,\n  /**\n   * Fired when an alert is triggered.\n   *\n   * @param {string} message Alert message.\n   * @param {string} variant One of \"error\", \"info\", \"success\".\n   */\n  onAlert: PropTypes.func,\n};\n\nexport default withStyles(styles, { name: 'MuiDropzoneArea' })(\n  DropzoneAreaBase\n);\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\nconst splitDropzoneAreaProps = (props) => {\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\n};\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\nclass DropzoneArea extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    render() {\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneAreaBase\n                {...dropzoneAreaProps}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n            />\n        );\n    }\n}\n\nDropzoneArea.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /**\n     * Fired when the files inside dropzone change.\n     *\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {File} deletedFile The file that was removed.\n     */\n    onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n// Split props related to DropzoneDialog from DropzoneArea ones\nfunction splitDropzoneDialogProps(allProps) {\n    const {\n        cancelButtonText,\n        dialogProps,\n        dialogTitle,\n        fullWidth,\n        maxWidth,\n        onClose,\n        onSave,\n        open,\n        submitButtonText,\n        ...dropzoneAreaProps\n    } = allProps;\n\n    return [\n        {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        },\n        dropzoneAreaProps,\n    ];\n}\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nclass DropzoneDialogBase extends React.PureComponent {\n    render() {\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\n        const {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        } = dropzoneDialogProps;\n\n        // Submit button state\n        const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n        return (\n            <Dialog\n                {...dialogProps}\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                onClose={onClose}\n                open={open}\n            >\n                <DialogTitle>{dialogTitle}</DialogTitle>\n\n                <DialogContent>\n                    <DropzoneAreaBase\n                        {...dropzoneAreaProps}\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        {cancelButtonText}\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        disabled={submitDisabled}\n                        onClick={onSave}\n                    >\n                        {submitButtonText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDropzoneDialogBase.defaultProps = {\n    open: false,\n    dialogTitle: 'Upload file',\n    dialogProps: {},\n    fullWidth: true,\n    maxWidth: 'sm',\n    cancelButtonText: 'Cancel',\n    submitButtonText: 'Submit',\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Sets whether the dialog is open or closed. */\n    open: PropTypes.bool,\n    /** The Dialog title. */\n    dialogTitle: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n    ]),\n    /**\n     * Props to pass to the Material-UI Dialog components.\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n     */\n    dialogProps: PropTypes.object,\n    /**\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\n     * Notice that the dialog width grow is limited by the default margin.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n     * Set to `false` to disable `maxWidth`.\n     */\n    maxWidth: PropTypes.string,\n    /** Cancel button text in dialog. */\n    cancelButtonText: PropTypes.string,\n    /** Submit button text in dialog. */\n    submitButtonText: PropTypes.string,\n    /**\n     * Fired when the modal is closed.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onClose: PropTypes.func,\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onSave: PropTypes.func,\n    /**\n     * Shows previews **BELOW** the dropzone.<br/>\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n     */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nclass DropzoneDialog extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    handleClose = (evt) => {\n        const {clearOnUnmount, onClose} = this.props;\n\n        if (onClose) {\n            onClose(evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    handleSave = (evt) => {\n        const {clearOnUnmount, onSave} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onSave) {\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    render() {\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneDialogBase\n                {...this.props}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n                onClose={this.handleClose}\n                onSave={this.handleSave}\n            />\n        );\n    }\n}\n\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneDialogBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {File[]} files All the files currently inside the Dropzone.\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\n     */\n    onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","palette","shape","spacing","root","imageContainer","position","zIndex","textAlign","opacity","image","height","width","maxWidth","color","text","primary","transition","boxSizing","boxShadow","borderRadius","removeButton","top","right","React.createElement","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","handlePreviewChipClick","classes","getPreviewIcon","container","clsx","map","fileObject","i","item","name","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","successAlert","backgroundColor","main","errorAlert","infoAlert","warningAlert","message","display","alignItems","marginRight","icon","fontSize","closeButton","SnackbarContentWrapper","props","className","onClose","variant","other","Icon","string","node","oneOf","backgroundPosition","minHeight","background","paper","border","borderColor","divider","cursor","overflow","active","animation","backgroundImage","backgroundSize","light","invalid","dark","textContainer","marginBottom","marginTop","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","DropzoneAreaBase","state","openSnackBar","snackbarMessage","snackbarVariant","handleDropAccepted","acceptedFiles","evt","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","length","setState","notifyAlert","all","fileObjs","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","onPreviewChipClick","clickedObject","getFileRemovedMessage","onDelete","removedFileObj","handleCloseSnackbar","onAlert","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","getRootProps","getInputProps","isDragActive","isDragReject","Array","isArray","includes","React","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","number","elementType","oneOfType","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","DropzoneArea","notifyFileChange","loadInitialFiles","initialFile","concat","console","log","addFiles","newFileObjects","deleteFile","removedFileObjIdx","remainingFileObjs","filter","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","DropzoneDialogBase","dropzoneDialogProps","submitDisabled","element","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}