{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\r\n    if (file.type.split('/')[0] === 'image') {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function convertBytesToMbsOrKbs(filesize) {\r\n    let size = '';\r\n    // I know, not technically correct...\r\n    if (filesize >= 1000000) {\r\n        size = (filesize / 1000000) + ' megabytes';\r\n    } else if (filesize >= 1000) {\r\n        size = (filesize / 1000) + ' kilobytes';\r\n    } else {\r\n        size = filesize + ' bytes';\r\n    }\r\n    return size;\r\n}\r\n\r\nexport async function createFileFromUrl(url) {\r\n    const response = await fetch(url);\r\n    const data = await response.blob();\r\n    const metadata = {type: data.type};\r\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\r\n    const ext = data.type.split('/').pop();\r\n    // Append extension only if not already present\r\n    const fullFilename = !filename?.endsWith(ext) ? `${filename}.${ext}` : filename;\r\n    return new File([data], fullFilename, metadata);\r\n}\r\n\r\nexport function readFile(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            resolve(event?.target?.result);\r\n        };\r\n        reader.onerror = (event) => {\r\n            reader.abort();\r\n            reject(event);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    });\r\n}\r\n","import Chip from '@material-ui/core/Chip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport clsx from 'clsx';\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {isImage} from '../helpers';\r\n\r\nconst styles = {\r\n    removeBtn: {\r\n        transition: '.5s ease',\r\n        position: 'absolute',\r\n        opacity: 0,\r\n        top: -5,\r\n        right: -5,\r\n        width: 40,\r\n        height: 40,\r\n    },\r\n    smallPreviewImg: {\r\n        height: 100,\r\n        width: 'initial',\r\n        maxWidth: '100%',\r\n        marginTop: 5,\r\n        marginRight: 10,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\r\n        borderRadius: 2,\r\n        zIndex: 5,\r\n        opacity: 1,\r\n    },\r\n    imageContainer: {\r\n        position: 'relative',\r\n        zIndex: 10,\r\n        textAlign: 'center',\r\n        '&:hover $smallPreviewImg': {\r\n            opacity: 0.3,\r\n        },\r\n        '&:hover $removeBtn': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n};\r\n\r\nfunction PreviewList({\r\n    fileObjects,\r\n    handleRemove,\r\n    showFileNames,\r\n    useChipsForPreview,\r\n    previewChipProps,\r\n    previewGridClasses,\r\n    previewGridProps,\r\n    classes,\r\n}) {\r\n    if (useChipsForPreview) {\r\n        return (\r\n            fileObjects.map((fileObject, i) => (\r\n                <div key={i}>\r\n                    <Chip\r\n                        label={fileObject.file.name}\r\n                        onDelete={handleRemove(i)}\r\n                        variant=\"outlined\"\r\n                        {...previewChipProps}\r\n                    />\r\n                </div>\r\n            ))\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid container={true} spacing={8} className={previewGridClasses.container} {...previewGridProps.container}>\r\n            {fileObjects.map((fileObject, i) => {\r\n                const img = (isImage(fileObject.file) ?\r\n                    <img className={classes.smallPreviewImg} role=\"presentation\" src={fileObject.data} /> :\r\n                    <AttachFileIcon className={classes.smallPreviewImg} />\r\n                );\r\n\r\n                return (\r\n                    <Grid\r\n                        key={i}\r\n                        item={true}\r\n                        xs={4}\r\n                        {...previewGridProps.item}\r\n                        className={clsx(previewGridClasses.item, classes.imageContainer)}\r\n                    >\r\n                        {img}\r\n\r\n                        {showFileNames && (\r\n                            <Typography variant=\"body1\" component=\"p\">\r\n                                {fileObject.file.name}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        <Fab\r\n                            onClick={handleRemove(i)}\r\n                            aria-label=\"Delete\"\r\n                            className={classes.removeBtn}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nPreviewList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n    previewChipProps: PropTypes.object,\r\n    previewGridClasses: PropTypes.object,\r\n    previewGridProps: PropTypes.object,\r\n    showFileNames: PropTypes.bool,\r\n    useChipsForPreview: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles)(PreviewList);\r\n","import green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n    const {classes, className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SnackbarContentWrapper);\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport {Fragment} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport {convertBytesToMbsOrKbs, createFileFromUrl, readFile} from '../helpers';\r\n\r\nimport PreviewList from './PreviewList';\r\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\r\n\r\nconst styles = {\r\n    '@keyframes progress': {\r\n        '0%': {\r\n            backgroundPosition: '0 0',\r\n        },\r\n        '100%': {\r\n            backgroundPosition: '-70px 0',\r\n        },\r\n    },\r\n    dropZone: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        minHeight: '250px',\r\n        backgroundColor: '#F0F0F0',\r\n        border: 'dashed',\r\n        borderColor: '#C8C8C8',\r\n        cursor: 'pointer',\r\n        boxSizing: 'border-box',\r\n    },\r\n    stripes: {\r\n        border: 'solid',\r\n        backgroundImage: 'repeating-linear-gradient(-45deg, #F0F0F0, #F0F0F0 25px, #C8C8C8 25px, #C8C8C8 50px)',\r\n        animation: 'progress 2s linear infinite !important',\r\n        backgroundSize: '150% 100%',\r\n    },\r\n    rejectStripes: {\r\n        backgroundImage: 'repeating-linear-gradient(-45deg, #fc8785, #fc8785 25px, #f4231f 25px, #f4231f 50px)',\r\n    },\r\n    dropzoneTextStyle: {\r\n        textAlign: 'center',\r\n    },\r\n    uploadIconSize: {\r\n        width: 51,\r\n        height: 51,\r\n        color: '#909090',\r\n    },\r\n    dropzoneParagraph: {\r\n        marginBottom: 20,\r\n        marginTop: 20,\r\n    },\r\n};\r\n\r\nconst snackbarAnchorOrigin = {\r\n    vertical: 'bottom',\r\n    horizontal: 'left',\r\n};\r\n\r\n/**\r\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\r\n */\r\nclass DropzoneArea extends React.PureComponent {\r\n    state = {\r\n        fileObjects: [],\r\n        openSnackBar: false,\r\n        snackbarMessage: '',\r\n        snackbarVariant: 'success',\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.filesArray(this.props.initialFiles);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {clearOnUnmount, onChange} = this.props;\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            });\r\n\r\n            if (onChange) {\r\n                onChange([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    filesArray = async(urls) => {\r\n        try {\r\n            const fileObjs = await Promise.all(\r\n                urls.map(async(url) => {\r\n                    const file = await createFileFromUrl(url);\r\n                    const data = await readFile(file);\r\n\r\n                    return {\r\n                        file,\r\n                        data,\r\n                    };\r\n                })\r\n            );\r\n\r\n            this.setState((state) => ({\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    fileObjs\r\n                ),\r\n            }),\r\n            () => {\r\n                const {onChange} = this.props;\r\n                const {fileObjects} = this.state;\r\n\r\n                if (onChange) {\r\n                    onChange(fileObjects.map((fileObject) => fileObject.file));\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleDropAccepted = async(acceptedFiles, evt) => {\r\n        const {filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onDrop} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\r\n            this.setState({\r\n                openSnackBar: true,\r\n                snackbarMessage: getFileLimitExceedMessage(filesLimit),\r\n                snackbarVariant: 'error',\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Notify Drop event\r\n        if (onDrop) {\r\n            onDrop(acceptedFiles, evt);\r\n        }\r\n\r\n        // Retrieve fileObjects data\r\n        const fileObjs = await Promise.all(\r\n            acceptedFiles.map(async(file) => {\r\n                const data = await readFile(file);\r\n                return {\r\n                    file,\r\n                    data,\r\n                };\r\n            })\r\n        );\r\n\r\n        // Display message\r\n        const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: message,\r\n            snackbarVariant: 'success',\r\n        });\r\n\r\n        // Update component state\r\n        this.setState((state) => {\r\n            // Handle a single file\r\n            if (filesLimit <= 1) {\r\n                return {\r\n                    fileObjects: [].concat(fileObjs[0]),\r\n                };\r\n            }\r\n\r\n            // Handle multiple files\r\n            return {\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    fileObjs\r\n                ),\r\n            };\r\n        },\r\n        () => {\r\n            const {onChange} = this.props;\r\n            const {fileObjects} = this.state;\r\n\r\n            if (onChange) {\r\n                onChange(fileObjects.map((fileObject) => fileObject.file));\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDropRejected = (rejectedFiles, evt) => {\r\n        const {acceptedFiles, getDropRejectMessage, maxFileSize, onDropRejected} = this.props;\r\n\r\n        let message = '';\r\n        rejectedFiles.forEach((rejectedFile) => {\r\n            message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\r\n        });\r\n\r\n        if (onDropRejected) {\r\n            onDropRejected(rejectedFiles, evt);\r\n        }\r\n\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: message,\r\n            snackbarVariant: 'error',\r\n        });\r\n    }\r\n\r\n    handleRemove = (fileIndex) => (event) => {\r\n        event.stopPropagation();\r\n\r\n        const {getFileRemovedMessage, onChange, onDelete} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        // Find removed fileObject\r\n        const removedFileObj = fileObjects.filter((fileObject, i) => {\r\n            return i === fileIndex;\r\n        })[0];\r\n        // Calculate remaining fileObjects array\r\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\r\n            return i !== fileIndex;\r\n        });\r\n\r\n        this.setState({fileObjects: remainingFileObjs}, () => {\r\n            if (onDelete) {\r\n                onDelete(removedFileObj.file);\r\n            }\r\n\r\n            if (onChange) {\r\n                onChange(this.state.fileObjects.map((fileObject) => fileObject.file));\r\n            }\r\n\r\n            this.setState({\r\n                openSnackBar: true,\r\n                snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\r\n                snackbarVariant: 'info',\r\n            });\r\n        });\r\n    };\r\n\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            openSnackBar: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            acceptedFiles,\r\n            classes,\r\n            dropzoneClass,\r\n            dropzoneParagraphClass,\r\n            dropzoneText,\r\n            filesLimit,\r\n            maxFileSize,\r\n            previewChipProps,\r\n            previewGridClasses,\r\n            previewGridProps,\r\n            previewText,\r\n            showAlerts,\r\n            showFileNames,\r\n            showFileNamesInPreview,\r\n            showPreviews,\r\n            showPreviewsInDropzone,\r\n            useChipsForPreview,\r\n        } = this.props;\r\n        const {fileObjects, openSnackBar, snackbarMessage, snackbarVariant} = this.state;\r\n\r\n        const acceptFiles = acceptedFiles?.join(',');\r\n        const isMultiple = filesLimit > 1;\r\n        const previewsVisible = showPreviews && fileObjects.length > 0;\r\n        const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Dropzone\r\n                    accept={acceptFiles}\r\n                    onDropAccepted={this.handleDropAccepted}\r\n                    onDropRejected={this.handleDropRejected}\r\n                    maxSize={maxFileSize}\r\n                    multiple={isMultiple}\r\n                >\r\n                    {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\r\n                        <div\r\n                            {...getRootProps()}\r\n                            className={clsx(\r\n                                classes.dropZone,\r\n                                dropzoneClass,\r\n                                isDragActive && classes.stripes,\r\n                                isDragReject && classes.rejectStripes,\r\n                            )}\r\n                        >\r\n                            <input {...getInputProps()} />\r\n\r\n                            <div className={classes.dropzoneTextStyle}>\r\n                                <Typography\r\n                                    variant=\"h5\"\r\n                                    component=\"p\"\r\n                                    className={clsx(classes.dropzoneParagraph, dropzoneParagraphClass)}\r\n                                >\r\n                                    {dropzoneText}\r\n                                </Typography>\r\n                                <CloudUploadIcon className={classes.uploadIconSize} />\r\n                            </div>\r\n\r\n                            {previewsInDropzoneVisible &&\r\n                                <PreviewList\r\n                                    fileObjects={fileObjects}\r\n                                    handleRemove={this.handleRemove}\r\n                                    showFileNames={showFileNames}\r\n                                    useChipsForPreview={useChipsForPreview}\r\n                                    previewChipProps={previewChipProps}\r\n                                    previewGridClasses={previewGridClasses}\r\n                                    previewGridProps={previewGridProps}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    )}\r\n                </Dropzone>\r\n\r\n                {previewsVisible &&\r\n                    <Fragment>\r\n                        <Typography variant=\"subtitle1\" component=\"span\">\r\n                            {previewText}\r\n                        </Typography>\r\n\r\n                        <PreviewList\r\n                            fileObjects={fileObjects}\r\n                            handleRemove={this.handleRemove}\r\n                            showFileNames={showFileNamesInPreview}\r\n                            useChipsForPreview={useChipsForPreview}\r\n                            previewChipProps={previewChipProps}\r\n                            previewGridClasses={previewGridClasses}\r\n                            previewGridProps={previewGridProps}\r\n                        />\r\n                    </Fragment>\r\n                }\r\n\r\n                {showAlerts &&\r\n                    <Snackbar\r\n                        anchorOrigin={snackbarAnchorOrigin}\r\n                        open={openSnackBar}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleCloseSnackbar}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleCloseSnackbar}\r\n                            variant={snackbarVariant}\r\n                            message={snackbarMessage}\r\n                        />\r\n                    </Snackbar>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneArea.defaultProps = {\r\n    acceptedFiles: ['image/*', 'video/*', 'application/*'],\r\n    filesLimit: 3,\r\n    maxFileSize: 3000000,\r\n    dropzoneText: 'Drag and drop a file here or click',\r\n    previewText: 'Preview:',\r\n    showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\r\n    showPreviewsInDropzone: true,\r\n    showFileNames: false,\r\n    showFileNamesInPreview: false,\r\n    useChipsForPreview: false,\r\n    previewChipProps: {},\r\n    previewGridClasses: {},\r\n    previewGridProps: {},\r\n    showAlerts: true,\r\n    clearOnUnmount: true,\r\n    initialFiles: [],\r\n    getFileLimitExceedMessage: (filesLimit) => (`Maximum allowed number of files exceeded. Only ${filesLimit} allowed`),\r\n    getFileAddedMessage: (fileName) => (`File ${fileName} successfully added.`),\r\n    getFileRemovedMessage: (fileName) => (`File ${fileName} removed.`),\r\n    getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\r\n        let message = `File ${rejectedFile.name} was rejected. `;\r\n        if (!acceptedFiles.includes(rejectedFile.type)) {\r\n            message += 'File type not supported. ';\r\n        }\r\n        if (rejectedFile.size > maxFileSize) {\r\n            message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\r\n        }\r\n        return message;\r\n    },\r\n};\r\n\r\nDropzoneArea.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** A list of file types to accept.\r\n     * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\r\n     */\r\n    acceptedFiles: PropTypes.arrayOf(PropTypes.string),\r\n    /** Maximum number of files that can be loaded into the dropzone. */\r\n    filesLimit: PropTypes.number,\r\n    /** Maximum file size (in bytes) that the dropzone will accept. */\r\n    maxFileSize: PropTypes.number,\r\n    /** Text inside the dropzone. */\r\n    dropzoneText: PropTypes.string,\r\n    /** Custom CSS class name for dropzone container. */\r\n    dropzoneClass: PropTypes.string,\r\n    /** Custom CSS class name for text inside the container. */\r\n    dropzoneParagraphClass: PropTypes.string,\r\n    /** Shows previews **BELOW** the dropzone. */\r\n    showPreviews: PropTypes.bool,\r\n    /** Shows preview **INSIDE** the dropzone area. */\r\n    showPreviewsInDropzone: PropTypes.bool,\r\n    /** Shows file name under the dropzone image. */\r\n    showFileNames: PropTypes.bool,\r\n    /** Shows file name under the image. */\r\n    showFileNamesInPreview: PropTypes.bool,\r\n    /** Uses deletable Material-UI Chip components to display file names. */\r\n    useChipsForPreview: PropTypes.bool,\r\n    /**\r\n     * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\r\n     *\r\n     * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\r\n     */\r\n    previewChipProps: PropTypes.object,\r\n    /**\r\n     * Custom CSS classNames for preview Grid components.<br/>\r\n     * Should be in the form {container: string, item: string, image: string}.\r\n     */\r\n    previewGridClasses: PropTypes.object,\r\n    /**\r\n     * Props to pass to the Material-UI Grid components.<br/>\r\n     * Should be in the form {container: GridProps, item: GridProps}.\r\n     *\r\n     * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\r\n     */\r\n    previewGridProps: PropTypes.object,\r\n    /** The label for the file preview section. */\r\n    previewText: PropTypes.string,\r\n    /** Shows styled Material-UI Snackbar when files are dropped, deleted or rejected. */\r\n    showAlerts: PropTypes.bool,\r\n    /** Clear uploaded files when component is unmounted. */\r\n    clearOnUnmount: PropTypes.bool,\r\n    /** List of URLs of already uploaded images.<br/>**Note:** Please take care of CORS. */\r\n    initialFiles: PropTypes.arrayOf(PropTypes.string),\r\n    /**\r\n     * Get alert message to display when files limit is exceed.\r\n     *\r\n     * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\r\n     *\r\n     * @param {number} filesLimit The `filesLimit` currently set for the component.\r\n     */\r\n    getFileLimitExceedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a new file is added.\r\n     *\r\n     * *Default*: \"File ${fileName} successfully added.\"\r\n     *\r\n     * @param {string} fileName The newly added file name.\r\n     */\r\n    getFileAddedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a file is removed.\r\n     *\r\n     * *Default*: \"File ${fileName} removed.\"\r\n     *\r\n     * @param {string} fileName The name of the removed file.\r\n     */\r\n    getFileRemovedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a file is rejected onDrop.\r\n     *\r\n     * *Default*: \"File ${rejectedFile.name} was rejected.\"\r\n     *\r\n     * @param {Object} rejectedFile The file that got rejected\r\n     * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\r\n     * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\r\n     */\r\n    getDropRejectMessage: PropTypes.func,\r\n    /**\r\n     * Fired when the files inside dropzone change.\r\n     *\r\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\r\n     */\r\n    onChange: PropTypes.func,\r\n    /**\r\n     * Fired when the user drops files into the dropzone.\r\n     *\r\n     * @param {File[]} droppedFiles All the files dropped into the dropzone.\r\n     */\r\n    onDrop: PropTypes.func,\r\n    /**\r\n     * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\r\n     *\r\n     * @param {File[]} rejectedFiles All the rejected files.\r\n     */\r\n    onDropRejected: PropTypes.func,\r\n    /**\r\n     * Fired when a file is deleted from the previews panel.\r\n     *\r\n     * @param {File} deletedFile The file that was removed.\r\n     */\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(DropzoneArea);\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport {Fragment} from 'react';\r\n\r\nimport DropzoneArea from './DropzoneArea';\r\n\r\n// Split props related to DropzoneDialog from DropzoneArea ones\r\nfunction splitDropzoneDialogProps(allProps) {\r\n    const {\r\n        cancelButtonText,\r\n        dialogProps,\r\n        dialogTitle,\r\n        fullWidth,\r\n        maxWidth,\r\n        onClose,\r\n        onSave,\r\n        open,\r\n        submitButtonText,\r\n        ...dropzoneAreaProps\r\n    } = allProps;\r\n\r\n    return [\r\n        {\r\n            cancelButtonText,\r\n            dialogProps,\r\n            dialogTitle,\r\n            fullWidth,\r\n            maxWidth,\r\n            onClose,\r\n            onSave,\r\n            open,\r\n            submitButtonText,\r\n        },\r\n        dropzoneAreaProps,\r\n    ];\r\n}\r\n\r\n/**\r\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\r\n *\r\n * It supports all the Props and Methods from `DropzoneArea`.\r\n */\r\nclass DropzoneDialog extends React.PureComponent {\r\n    state = {\r\n        files: [],\r\n    };\r\n\r\n    handleClose = (event) => {\r\n        const {onClose} = this.props;\r\n        // Notify onClose\r\n        if (onClose) {\r\n            onClose(event);\r\n        }\r\n    }\r\n\r\n    handleChange = (files) => {\r\n        const {onChange} = this.props;\r\n\r\n        this.setState({\r\n            files,\r\n        });\r\n\r\n        if (onChange) {\r\n            onChange(files);\r\n        }\r\n    }\r\n\r\n    handleSaveClick = () => {\r\n        const {onSave} = this.props;\r\n        const {files} = this.state;\r\n\r\n        if (onSave) {\r\n            onSave(files);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\r\n        const {\r\n            cancelButtonText,\r\n            dialogProps,\r\n            dialogTitle,\r\n            fullWidth,\r\n            maxWidth,\r\n            open,\r\n            submitButtonText,\r\n        } = dropzoneDialogProps;\r\n        const {files} = this.state;\r\n\r\n        // Submit button state\r\n        const submitDisabled = files.length === 0;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Dialog\r\n                    {...dialogProps}\r\n                    fullWidth={fullWidth}\r\n                    maxWidth={maxWidth}\r\n                    onClose={this.handleClose}\r\n                    open={open}\r\n                >\r\n                    <DialogTitle>{dialogTitle}</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DropzoneArea\r\n                            {...dropzoneAreaProps}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            {cancelButtonText}\r\n                        </Button>\r\n\r\n                        <Button\r\n                            color=\"primary\"\r\n                            disabled={submitDisabled}\r\n                            onClick={this.handleSaveClick}\r\n                        >\r\n                            {submitButtonText}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneDialog.defaultProps = {\r\n    ...DropzoneArea.defaultProps,\r\n    open: false,\r\n    dialogTitle: 'Upload file',\r\n    dialogProps: {},\r\n    fullWidth: true,\r\n    maxWidth: 'sm',\r\n    cancelButtonText: 'Cancel',\r\n    submitButtonText: 'Submit',\r\n    showPreviews: true,\r\n    showPreviewsInDropzone: false,\r\n    showFileNamesInPreview: true,\r\n};\r\n\r\nDropzoneDialog.propTypes = {\r\n    ...DropzoneArea.propTypes,\r\n    /** Sets whether the dialog is open or closed. */\r\n    open: PropTypes.bool,\r\n    /** The Dialog title. */\r\n    dialogTitle: PropTypes.string,\r\n    /**\r\n     * Props to pass to the Material-UI Dialog components.\r\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\r\n     */\r\n    dialogProps: PropTypes.object,\r\n    /**\r\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\r\n     * Notice that the dialog width grow is limited by the default margin.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n    /**\r\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\r\n     * Set to `false` to disable `maxWidth`.\r\n     */\r\n    maxWidth: PropTypes.string,\r\n    /** Cancel button text in dialog. */\r\n    cancelButtonText: PropTypes.string,\r\n    /** Submit button text in dialog. */\r\n    submitButtonText: PropTypes.string,\r\n    /**\r\n     * Fired when the modal is closed\r\n     *\r\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\r\n     */\r\n    onClose: PropTypes.func,\r\n    /**\r\n     * Fired when the user clicks the Submit button.\r\n     *\r\n     * @param {File[]} files All the files currently inside the Dropzone.\r\n     */\r\n    onSave: PropTypes.func,\r\n    /**\r\n     * Shows previews **BELOW** the dropzone.<br/>\r\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\r\n     */\r\n    showPreviews: PropTypes.bool,\r\n    /** Shows preview **INSIDE** the dropzone area. */\r\n    showPreviewsInDropzone: PropTypes.bool,\r\n    /** Shows file name under the image. */\r\n    showFileNamesInPreview: PropTypes.bool,\r\n};\r\n\r\nexport default DropzoneDialog;\r\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","ext","fullFilename","endsWith","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","removeBtn","transition","position","opacity","top","right","width","height","smallPreviewImg","maxWidth","marginTop","marginRight","color","boxSizing","boxShadow","borderRadius","zIndex","imageContainer","textAlign","React.createElement","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","map","fileObject","i","name","container","img","item","clsx","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","spacing","message","display","alignItems","SnackbarContentWrapper","props","className","onClose","variant","other","Icon","close","string","node","oneOf","backgroundPosition","dropZone","minHeight","border","borderColor","cursor","stripes","backgroundImage","animation","backgroundSize","rejectStripes","dropzoneTextStyle","uploadIconSize","dropzoneParagraph","marginBottom","snackbarAnchorOrigin","vertical","horizontal","DropzoneArea","state","openSnackBar","snackbarMessage","snackbarVariant","filesArray","urls","all","fileObjs","setState","concat","onChange","console","log","handleDropAccepted","acceptedFiles","evt","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onDrop","length","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","getFileRemovedMessage","onDelete","removedFileObj","filter","remainingFileObjs","handleCloseSnackbar","initialFiles","clearOnUnmount","dropzoneClass","dropzoneParagraphClass","dropzoneText","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","getRootProps","getInputProps","isDragActive","isDragReject","React","defaultProps","fileName","includes","number","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","dropzoneAreaProps","DropzoneDialog","files","handleClose","handleChange","handleSaveClick","dropzoneDialogProps","submitDisabled"],"mappings":"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"}